version: '3.4'

networks:
  sync:
    driver: bridge

services:
  dev:
    build:
      context: .
      target: builder
      args:
        VERSION: "${VERSION}"
        COMMIT: "${COMMIT}"
        BUILD_TIME: "${BUILD_TIME}"
    depends_on:
      - dynamo-local
      - redis
      - postgres
    networks:
      - sync
    environment:
      - PPROF_ENABLED=true
      - SENTRY_DSN
      - ENV=local
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=GOSYNC
      - AWS_SECRET_ACCESS_KEY=GOSYNC
      - AWS_REGION=us-west-2
      - AWS_ENDPOINT=http://dynamo-local:8000
      - REDIS_URL=redis:6379
      - SQL_DATABASE_URL=postgres://sync:password@postgres/postgres?sslmode=disable
      - SQL_TEST_DATABASE_URL=postgres://sync:password@postgres/testing?sslmode=disable
  web:
    build:
      context: .
      target: artifact
      args:
        VERSION: "${VERSION}"
        COMMIT: "${COMMIT}"
        BUILD_TIME: "${BUILD_TIME}"
    ports:
      - "8295:8295"
    depends_on:
      - dynamo-local
      - redis
    networks:
      - sync
    environment:
      - PPROF_ENABLED=true
      - SENTRY_DSN
      - ENV=local
      - DEBUG=1
      - AWS_ACCESS_KEY_ID=GOSYNC
      - AWS_SECRET_ACCESS_KEY=GOSYNC
      - AWS_REGION=us-west-2
      - AWS_ENDPOINT=http://dynamo-local:8000
      - TABLE_NAME=client-entity-dev
      - REDIS_URL=redis:6379
      - SQL_DATABASE_URL=postgres://sync:password@postgres/postgres?sslmode=disable
      - SQL_TEST_DATABASE_URL=postgres://sync:password@postgres/testing?sslmode=disable
  dynamo-local:
    build:
      context: .
      dockerfile: dynamo.Dockerfile
    ports:
      - "8000:8000"
    networks:
      - sync
  redis:
    image: public.ecr.aws/docker/library/redis:6.2
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - sync
  postgres:
    image: public.ecr.aws/docker/library/postgres:16
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=sync
      - POSTGRES_PASSWORD=password
    networks:
      - sync
    volumes:
      - "./misc/create_additional_dbs.sql:/docker-entrypoint-initdb.d/create_additional_dbs.sql"
