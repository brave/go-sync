// Copyright 2012 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Sync protocol datatype extension for themes.

// If you change or add any fields in this file, update proto_visitors.h and
// potentially proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: theme_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Properties of theme sync objects.
type ThemeSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If set, we're using a extension and all custom_* fields should be
	// present.  If not set, and all custom_* fields should be omitted.
	UseCustomTheme *bool `protobuf:"varint,1,opt,name=use_custom_theme,json=useCustomTheme" json:"use_custom_theme,omitempty"`
	// This field is only relevant on platforms that have a distinction between
	// the system theme and the default theme, but other platforms must be careful
	// to pass through the value of this flag.
	//
	// If true, we use the system theme by default (i.e., when we don't use a
	// custom theme) for platforms that make a distinction between the default
	// theme and the system theme. Has no effect if use_custom_theme is true.
	UseSystemThemeByDefault *bool `protobuf:"varint,2,opt,name=use_system_theme_by_default,json=useSystemThemeByDefault" json:"use_system_theme_by_default,omitempty"`
	// TODO(gayane): Migrate custom_* fields to a separate message.
	// Extension specific fields. Ignored if |autogenerated_theme| is set.
	CustomThemeName      *string `protobuf:"bytes,3,opt,name=custom_theme_name,json=customThemeName" json:"custom_theme_name,omitempty"`
	CustomThemeId        *string `protobuf:"bytes,4,opt,name=custom_theme_id,json=customThemeId" json:"custom_theme_id,omitempty"`
	CustomThemeUpdateUrl *string `protobuf:"bytes,5,opt,name=custom_theme_update_url,json=customThemeUpdateUrl" json:"custom_theme_update_url,omitempty"`
	// If set, autogenerated theme is used.
	AutogeneratedTheme *ThemeSpecifics_AutogeneratedTheme `protobuf:"bytes,6,opt,name=autogenerated_theme,json=autogeneratedTheme" json:"autogenerated_theme,omitempty"`
}

func (x *ThemeSpecifics) Reset() {
	*x = ThemeSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_theme_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThemeSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeSpecifics) ProtoMessage() {}

func (x *ThemeSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_theme_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeSpecifics.ProtoReflect.Descriptor instead.
func (*ThemeSpecifics) Descriptor() ([]byte, []int) {
	return file_theme_specifics_proto_rawDescGZIP(), []int{0}
}

func (x *ThemeSpecifics) GetUseCustomTheme() bool {
	if x != nil && x.UseCustomTheme != nil {
		return *x.UseCustomTheme
	}
	return false
}

func (x *ThemeSpecifics) GetUseSystemThemeByDefault() bool {
	if x != nil && x.UseSystemThemeByDefault != nil {
		return *x.UseSystemThemeByDefault
	}
	return false
}

func (x *ThemeSpecifics) GetCustomThemeName() string {
	if x != nil && x.CustomThemeName != nil {
		return *x.CustomThemeName
	}
	return ""
}

func (x *ThemeSpecifics) GetCustomThemeId() string {
	if x != nil && x.CustomThemeId != nil {
		return *x.CustomThemeId
	}
	return ""
}

func (x *ThemeSpecifics) GetCustomThemeUpdateUrl() string {
	if x != nil && x.CustomThemeUpdateUrl != nil {
		return *x.CustomThemeUpdateUrl
	}
	return ""
}

func (x *ThemeSpecifics) GetAutogeneratedTheme() *ThemeSpecifics_AutogeneratedTheme {
	if x != nil {
		return x.AutogeneratedTheme
	}
	return nil
}

type ThemeSpecifics_AutogeneratedTheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SkColor used to autogenerate theme.
	Color *uint32 `protobuf:"varint,1,opt,name=color" json:"color,omitempty"`
}

func (x *ThemeSpecifics_AutogeneratedTheme) Reset() {
	*x = ThemeSpecifics_AutogeneratedTheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_theme_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThemeSpecifics_AutogeneratedTheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThemeSpecifics_AutogeneratedTheme) ProtoMessage() {}

func (x *ThemeSpecifics_AutogeneratedTheme) ProtoReflect() protoreflect.Message {
	mi := &file_theme_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThemeSpecifics_AutogeneratedTheme.ProtoReflect.Descriptor instead.
func (*ThemeSpecifics_AutogeneratedTheme) Descriptor() ([]byte, []int) {
	return file_theme_specifics_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ThemeSpecifics_AutogeneratedTheme) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

var File_theme_specifics_proto protoreflect.FileDescriptor

var file_theme_specifics_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
	0x22, 0x8c, 0x03, 0x0a, 0x0e, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x3c, 0x0a,
	0x1b, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x5f, 0x62, 0x79, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x17, 0x75, 0x73, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x68, 0x65,
	0x6d, 0x65, 0x42, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x5b, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x52,
	0x12, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x68,
	0x65, 0x6d, 0x65, 0x1a, 0x2a, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x42,
	0x36, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x03, 0x50, 0x01, 0x5a, 0x09, 0x2e, 0x2f,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
}

var (
	file_theme_specifics_proto_rawDescOnce sync.Once
	file_theme_specifics_proto_rawDescData = file_theme_specifics_proto_rawDesc
)

func file_theme_specifics_proto_rawDescGZIP() []byte {
	file_theme_specifics_proto_rawDescOnce.Do(func() {
		file_theme_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_theme_specifics_proto_rawDescData)
	})
	return file_theme_specifics_proto_rawDescData
}

var file_theme_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_theme_specifics_proto_goTypes = []interface{}{
	(*ThemeSpecifics)(nil),                    // 0: sync_pb.ThemeSpecifics
	(*ThemeSpecifics_AutogeneratedTheme)(nil), // 1: sync_pb.ThemeSpecifics.AutogeneratedTheme
}
var file_theme_specifics_proto_depIdxs = []int32{
	1, // 0: sync_pb.ThemeSpecifics.autogenerated_theme:type_name -> sync_pb.ThemeSpecifics.AutogeneratedTheme
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_theme_specifics_proto_init() }
func file_theme_specifics_proto_init() {
	if File_theme_specifics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_theme_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThemeSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_theme_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThemeSpecifics_AutogeneratedTheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_theme_specifics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_theme_specifics_proto_goTypes,
		DependencyIndexes: file_theme_specifics_proto_depIdxs,
		MessageInfos:      file_theme_specifics_proto_msgTypes,
	}.Build()
	File_theme_specifics_proto = out.File
	file_theme_specifics_proto_rawDesc = nil
	file_theme_specifics_proto_goTypes = nil
	file_theme_specifics_proto_depIdxs = nil
}
