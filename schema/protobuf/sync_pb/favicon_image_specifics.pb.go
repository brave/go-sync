// Copyright 2012 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// DEPRECATED: This data type is no longer synced.
// TODO(crbug.com/978775): Remove once the file is no longer used by the server.
// Sync protocol datatype extension for the favicon image specifics.

// If you change or add any fields in this file, update proto_visitors.h and
// potentially proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: favicon_image_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FaviconData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The image data for the favicon (PNG encoded).
	Favicon []byte `protobuf:"bytes,1,opt,name=favicon" json:"favicon,omitempty"`
	// The favicon dimensions.
	Width  *int32 `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
}

func (x *FaviconData) Reset() {
	*x = FaviconData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_favicon_image_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaviconData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaviconData) ProtoMessage() {}

func (x *FaviconData) ProtoReflect() protoreflect.Message {
	mi := &file_favicon_image_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaviconData.ProtoReflect.Descriptor instead.
func (*FaviconData) Descriptor() ([]byte, []int) {
	return file_favicon_image_specifics_proto_rawDescGZIP(), []int{0}
}

func (x *FaviconData) GetFavicon() []byte {
	if x != nil {
		return x.Favicon
	}
	return nil
}

func (x *FaviconData) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *FaviconData) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

// Image data for favicons. Multiple resolutions are supported.
type FaviconImageSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The url of the favicon image.
	FaviconUrl *string `protobuf:"bytes,1,opt,name=favicon_url,json=faviconUrl" json:"favicon_url,omitempty"`
	// A normal low-resolution web favicon (max resolution 16x16).
	FaviconWeb *FaviconData `protobuf:"bytes,2,opt,name=favicon_web,json=faviconWeb" json:"favicon_web,omitempty"`
	// A slightly higher-resolution web favicon (max resolution 32x32).
	FaviconWeb_32 *FaviconData `protobuf:"bytes,3,opt,name=favicon_web_32,json=faviconWeb32" json:"favicon_web_32,omitempty"`
	// A high-resolution touch favicon (not precomposed, max resolution 64x64).
	FaviconTouch_64 *FaviconData `protobuf:"bytes,4,opt,name=favicon_touch_64,json=faviconTouch64" json:"favicon_touch_64,omitempty"`
	// A high-resolution touch favicon (precomposed, max resolution 64x64).
	FaviconTouchPrecomposed_64 *FaviconData `protobuf:"bytes,5,opt,name=favicon_touch_precomposed_64,json=faviconTouchPrecomposed64" json:"favicon_touch_precomposed_64,omitempty"`
}

func (x *FaviconImageSpecifics) Reset() {
	*x = FaviconImageSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_favicon_image_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaviconImageSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaviconImageSpecifics) ProtoMessage() {}

func (x *FaviconImageSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_favicon_image_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaviconImageSpecifics.ProtoReflect.Descriptor instead.
func (*FaviconImageSpecifics) Descriptor() ([]byte, []int) {
	return file_favicon_image_specifics_proto_rawDescGZIP(), []int{1}
}

func (x *FaviconImageSpecifics) GetFaviconUrl() string {
	if x != nil && x.FaviconUrl != nil {
		return *x.FaviconUrl
	}
	return ""
}

func (x *FaviconImageSpecifics) GetFaviconWeb() *FaviconData {
	if x != nil {
		return x.FaviconWeb
	}
	return nil
}

func (x *FaviconImageSpecifics) GetFaviconWeb_32() *FaviconData {
	if x != nil {
		return x.FaviconWeb_32
	}
	return nil
}

func (x *FaviconImageSpecifics) GetFaviconTouch_64() *FaviconData {
	if x != nil {
		return x.FaviconTouch_64
	}
	return nil
}

func (x *FaviconImageSpecifics) GetFaviconTouchPrecomposed_64() *FaviconData {
	if x != nil {
		return x.FaviconTouchPrecomposed_64
	}
	return nil
}

var File_favicon_image_specifics_proto protoreflect.FileDescriptor

var file_favicon_image_specifics_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x22, 0x55, 0x0a, 0x0b, 0x46, 0x61, 0x76, 0x69,
	0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xc2, 0x02, 0x0a, 0x15, 0x46, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x76,
	0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x61,
	0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x61, 0x76, 0x69, 0x63, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x57, 0x65,
	0x62, 0x12, 0x3a, 0x0a, 0x0e, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x77, 0x65, 0x62,
	0x5f, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x70, 0x62, 0x2e, 0x46, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x0c, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x57, 0x65, 0x62, 0x33, 0x32, 0x12, 0x3e, 0x0a,
	0x10, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x36,
	0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x46, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x66,
	0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x36, 0x34, 0x12, 0x55, 0x0a,
	0x1c, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x70,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x5f, 0x36, 0x34, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x61,
	0x76, 0x69, 0x63, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19, 0x66, 0x61, 0x76, 0x69, 0x63,
	0x6f, 0x6e, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x64, 0x36, 0x34, 0x42, 0x36, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x03, 0x50,
	0x01, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
}

var (
	file_favicon_image_specifics_proto_rawDescOnce sync.Once
	file_favicon_image_specifics_proto_rawDescData = file_favicon_image_specifics_proto_rawDesc
)

func file_favicon_image_specifics_proto_rawDescGZIP() []byte {
	file_favicon_image_specifics_proto_rawDescOnce.Do(func() {
		file_favicon_image_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_favicon_image_specifics_proto_rawDescData)
	})
	return file_favicon_image_specifics_proto_rawDescData
}

var file_favicon_image_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_favicon_image_specifics_proto_goTypes = []interface{}{
	(*FaviconData)(nil),           // 0: sync_pb.FaviconData
	(*FaviconImageSpecifics)(nil), // 1: sync_pb.FaviconImageSpecifics
}
var file_favicon_image_specifics_proto_depIdxs = []int32{
	0, // 0: sync_pb.FaviconImageSpecifics.favicon_web:type_name -> sync_pb.FaviconData
	0, // 1: sync_pb.FaviconImageSpecifics.favicon_web_32:type_name -> sync_pb.FaviconData
	0, // 2: sync_pb.FaviconImageSpecifics.favicon_touch_64:type_name -> sync_pb.FaviconData
	0, // 3: sync_pb.FaviconImageSpecifics.favicon_touch_precomposed_64:type_name -> sync_pb.FaviconData
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_favicon_image_specifics_proto_init() }
func file_favicon_image_specifics_proto_init() {
	if File_favicon_image_specifics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_favicon_image_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaviconData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_favicon_image_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaviconImageSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_favicon_image_specifics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_favicon_image_specifics_proto_goTypes,
		DependencyIndexes: file_favicon_image_specifics_proto_depIdxs,
		MessageInfos:      file_favicon_image_specifics_proto_msgTypes,
	}.Build()
	File_favicon_image_specifics_proto = out.File
	file_favicon_image_specifics_proto_rawDesc = nil
	file_favicon_image_specifics_proto_goTypes = nil
	file_favicon_image_specifics_proto_depIdxs = nil
}
