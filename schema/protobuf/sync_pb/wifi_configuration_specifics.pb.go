// Copyright 2019 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Sync protocol datatype extension for Wi-Fi configuration items.

// If you change or add any fields in this file, update proto_visitors.h and
// potentially proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: wifi_configuration_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WifiConfigurationSpecifics_SecurityType int32

const (
	WifiConfigurationSpecifics_SECURITY_TYPE_UNSPECIFIED WifiConfigurationSpecifics_SecurityType = 0
	WifiConfigurationSpecifics_SECURITY_TYPE_NONE        WifiConfigurationSpecifics_SecurityType = 1
	WifiConfigurationSpecifics_SECURITY_TYPE_WEP         WifiConfigurationSpecifics_SecurityType = 2
	WifiConfigurationSpecifics_SECURITY_TYPE_PSK         WifiConfigurationSpecifics_SecurityType = 3 // WPA-PSK or RSN-PSK
)

// Enum value maps for WifiConfigurationSpecifics_SecurityType.
var (
	WifiConfigurationSpecifics_SecurityType_name = map[int32]string{
		0: "SECURITY_TYPE_UNSPECIFIED",
		1: "SECURITY_TYPE_NONE",
		2: "SECURITY_TYPE_WEP",
		3: "SECURITY_TYPE_PSK",
	}
	WifiConfigurationSpecifics_SecurityType_value = map[string]int32{
		"SECURITY_TYPE_UNSPECIFIED": 0,
		"SECURITY_TYPE_NONE":        1,
		"SECURITY_TYPE_WEP":         2,
		"SECURITY_TYPE_PSK":         3,
	}
)

func (x WifiConfigurationSpecifics_SecurityType) Enum() *WifiConfigurationSpecifics_SecurityType {
	p := new(WifiConfigurationSpecifics_SecurityType)
	*p = x
	return p
}

func (x WifiConfigurationSpecifics_SecurityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiConfigurationSpecifics_SecurityType) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_configuration_specifics_proto_enumTypes[0].Descriptor()
}

func (WifiConfigurationSpecifics_SecurityType) Type() protoreflect.EnumType {
	return &file_wifi_configuration_specifics_proto_enumTypes[0]
}

func (x WifiConfigurationSpecifics_SecurityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WifiConfigurationSpecifics_SecurityType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WifiConfigurationSpecifics_SecurityType(num)
	return nil
}

// Deprecated: Use WifiConfigurationSpecifics_SecurityType.Descriptor instead.
func (WifiConfigurationSpecifics_SecurityType) EnumDescriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 0}
}

type WifiConfigurationSpecifics_AutomaticallyConnectOption int32

const (
	WifiConfigurationSpecifics_AUTOMATICALLY_CONNECT_UNSPECIFIED WifiConfigurationSpecifics_AutomaticallyConnectOption = 0
	WifiConfigurationSpecifics_AUTOMATICALLY_CONNECT_DISABLED    WifiConfigurationSpecifics_AutomaticallyConnectOption = 1
	WifiConfigurationSpecifics_AUTOMATICALLY_CONNECT_ENABLED     WifiConfigurationSpecifics_AutomaticallyConnectOption = 2
)

// Enum value maps for WifiConfigurationSpecifics_AutomaticallyConnectOption.
var (
	WifiConfigurationSpecifics_AutomaticallyConnectOption_name = map[int32]string{
		0: "AUTOMATICALLY_CONNECT_UNSPECIFIED",
		1: "AUTOMATICALLY_CONNECT_DISABLED",
		2: "AUTOMATICALLY_CONNECT_ENABLED",
	}
	WifiConfigurationSpecifics_AutomaticallyConnectOption_value = map[string]int32{
		"AUTOMATICALLY_CONNECT_UNSPECIFIED": 0,
		"AUTOMATICALLY_CONNECT_DISABLED":    1,
		"AUTOMATICALLY_CONNECT_ENABLED":     2,
	}
)

func (x WifiConfigurationSpecifics_AutomaticallyConnectOption) Enum() *WifiConfigurationSpecifics_AutomaticallyConnectOption {
	p := new(WifiConfigurationSpecifics_AutomaticallyConnectOption)
	*p = x
	return p
}

func (x WifiConfigurationSpecifics_AutomaticallyConnectOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiConfigurationSpecifics_AutomaticallyConnectOption) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_configuration_specifics_proto_enumTypes[1].Descriptor()
}

func (WifiConfigurationSpecifics_AutomaticallyConnectOption) Type() protoreflect.EnumType {
	return &file_wifi_configuration_specifics_proto_enumTypes[1]
}

func (x WifiConfigurationSpecifics_AutomaticallyConnectOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WifiConfigurationSpecifics_AutomaticallyConnectOption) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WifiConfigurationSpecifics_AutomaticallyConnectOption(num)
	return nil
}

// Deprecated: Use WifiConfigurationSpecifics_AutomaticallyConnectOption.Descriptor instead.
func (WifiConfigurationSpecifics_AutomaticallyConnectOption) EnumDescriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 1}
}

type WifiConfigurationSpecifics_IsPreferredOption int32

const (
	WifiConfigurationSpecifics_IS_PREFERRED_UNSPECIFIED WifiConfigurationSpecifics_IsPreferredOption = 0
	WifiConfigurationSpecifics_IS_PREFERRED_DISABLED    WifiConfigurationSpecifics_IsPreferredOption = 1
	WifiConfigurationSpecifics_IS_PREFERRED_ENABLED     WifiConfigurationSpecifics_IsPreferredOption = 2
)

// Enum value maps for WifiConfigurationSpecifics_IsPreferredOption.
var (
	WifiConfigurationSpecifics_IsPreferredOption_name = map[int32]string{
		0: "IS_PREFERRED_UNSPECIFIED",
		1: "IS_PREFERRED_DISABLED",
		2: "IS_PREFERRED_ENABLED",
	}
	WifiConfigurationSpecifics_IsPreferredOption_value = map[string]int32{
		"IS_PREFERRED_UNSPECIFIED": 0,
		"IS_PREFERRED_DISABLED":    1,
		"IS_PREFERRED_ENABLED":     2,
	}
)

func (x WifiConfigurationSpecifics_IsPreferredOption) Enum() *WifiConfigurationSpecifics_IsPreferredOption {
	p := new(WifiConfigurationSpecifics_IsPreferredOption)
	*p = x
	return p
}

func (x WifiConfigurationSpecifics_IsPreferredOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiConfigurationSpecifics_IsPreferredOption) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_configuration_specifics_proto_enumTypes[2].Descriptor()
}

func (WifiConfigurationSpecifics_IsPreferredOption) Type() protoreflect.EnumType {
	return &file_wifi_configuration_specifics_proto_enumTypes[2]
}

func (x WifiConfigurationSpecifics_IsPreferredOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WifiConfigurationSpecifics_IsPreferredOption) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WifiConfigurationSpecifics_IsPreferredOption(num)
	return nil
}

// Deprecated: Use WifiConfigurationSpecifics_IsPreferredOption.Descriptor instead.
func (WifiConfigurationSpecifics_IsPreferredOption) EnumDescriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 2}
}

type WifiConfigurationSpecifics_MeteredOption int32

const (
	WifiConfigurationSpecifics_METERED_OPTION_UNSPECIFIED WifiConfigurationSpecifics_MeteredOption = 0
	WifiConfigurationSpecifics_METERED_OPTION_NO          WifiConfigurationSpecifics_MeteredOption = 1
	WifiConfigurationSpecifics_METERED_OPTION_YES         WifiConfigurationSpecifics_MeteredOption = 2
	// Allows the device to use heuristics to determine if network is metered.
	WifiConfigurationSpecifics_METERED_OPTION_AUTO WifiConfigurationSpecifics_MeteredOption = 3
)

// Enum value maps for WifiConfigurationSpecifics_MeteredOption.
var (
	WifiConfigurationSpecifics_MeteredOption_name = map[int32]string{
		0: "METERED_OPTION_UNSPECIFIED",
		1: "METERED_OPTION_NO",
		2: "METERED_OPTION_YES",
		3: "METERED_OPTION_AUTO",
	}
	WifiConfigurationSpecifics_MeteredOption_value = map[string]int32{
		"METERED_OPTION_UNSPECIFIED": 0,
		"METERED_OPTION_NO":          1,
		"METERED_OPTION_YES":         2,
		"METERED_OPTION_AUTO":        3,
	}
)

func (x WifiConfigurationSpecifics_MeteredOption) Enum() *WifiConfigurationSpecifics_MeteredOption {
	p := new(WifiConfigurationSpecifics_MeteredOption)
	*p = x
	return p
}

func (x WifiConfigurationSpecifics_MeteredOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiConfigurationSpecifics_MeteredOption) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_configuration_specifics_proto_enumTypes[3].Descriptor()
}

func (WifiConfigurationSpecifics_MeteredOption) Type() protoreflect.EnumType {
	return &file_wifi_configuration_specifics_proto_enumTypes[3]
}

func (x WifiConfigurationSpecifics_MeteredOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WifiConfigurationSpecifics_MeteredOption) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WifiConfigurationSpecifics_MeteredOption(num)
	return nil
}

// Deprecated: Use WifiConfigurationSpecifics_MeteredOption.Descriptor instead.
func (WifiConfigurationSpecifics_MeteredOption) EnumDescriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 3}
}

type WifiConfigurationSpecifics_DnsOption int32

const (
	WifiConfigurationSpecifics_DNS_OPTION_UNSPECIFIED  WifiConfigurationSpecifics_DnsOption = 0
	WifiConfigurationSpecifics_DNS_OPTION_DEFAULT_DHCP WifiConfigurationSpecifics_DnsOption = 1
	WifiConfigurationSpecifics_DNS_OPTION_CUSTOM       WifiConfigurationSpecifics_DnsOption = 2
)

// Enum value maps for WifiConfigurationSpecifics_DnsOption.
var (
	WifiConfigurationSpecifics_DnsOption_name = map[int32]string{
		0: "DNS_OPTION_UNSPECIFIED",
		1: "DNS_OPTION_DEFAULT_DHCP",
		2: "DNS_OPTION_CUSTOM",
	}
	WifiConfigurationSpecifics_DnsOption_value = map[string]int32{
		"DNS_OPTION_UNSPECIFIED":  0,
		"DNS_OPTION_DEFAULT_DHCP": 1,
		"DNS_OPTION_CUSTOM":       2,
	}
)

func (x WifiConfigurationSpecifics_DnsOption) Enum() *WifiConfigurationSpecifics_DnsOption {
	p := new(WifiConfigurationSpecifics_DnsOption)
	*p = x
	return p
}

func (x WifiConfigurationSpecifics_DnsOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiConfigurationSpecifics_DnsOption) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_configuration_specifics_proto_enumTypes[4].Descriptor()
}

func (WifiConfigurationSpecifics_DnsOption) Type() protoreflect.EnumType {
	return &file_wifi_configuration_specifics_proto_enumTypes[4]
}

func (x WifiConfigurationSpecifics_DnsOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WifiConfigurationSpecifics_DnsOption) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WifiConfigurationSpecifics_DnsOption(num)
	return nil
}

// Deprecated: Use WifiConfigurationSpecifics_DnsOption.Descriptor instead.
func (WifiConfigurationSpecifics_DnsOption) EnumDescriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 4}
}

type WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption int32

const (
	WifiConfigurationSpecifics_ProxyConfiguration_PROXY_OPTION_UNSPECIFIED WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption = 0
	WifiConfigurationSpecifics_ProxyConfiguration_PROXY_OPTION_DISABLED    WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption = 1
	// Use a Proxy Auto-config(PAC) Url, set in proxy_url
	WifiConfigurationSpecifics_ProxyConfiguration_PROXY_OPTION_AUTOMATIC WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption = 2
	// Uses Web Proxy Auto-Discovery Protocol (WPAD) to discover the proxy
	// settings using DHCP/DNS.
	WifiConfigurationSpecifics_ProxyConfiguration_PROXY_OPTION_AUTODISCOVERY WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption = 3
	// User sets details in manual_proxy_configuration.
	WifiConfigurationSpecifics_ProxyConfiguration_PROXY_OPTION_MANUAL WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption = 4
)

// Enum value maps for WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption.
var (
	WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption_name = map[int32]string{
		0: "PROXY_OPTION_UNSPECIFIED",
		1: "PROXY_OPTION_DISABLED",
		2: "PROXY_OPTION_AUTOMATIC",
		3: "PROXY_OPTION_AUTODISCOVERY",
		4: "PROXY_OPTION_MANUAL",
	}
	WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption_value = map[string]int32{
		"PROXY_OPTION_UNSPECIFIED":   0,
		"PROXY_OPTION_DISABLED":      1,
		"PROXY_OPTION_AUTOMATIC":     2,
		"PROXY_OPTION_AUTODISCOVERY": 3,
		"PROXY_OPTION_MANUAL":        4,
	}
)

func (x WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) Enum() *WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption {
	p := new(WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption)
	*p = x
	return p
}

func (x WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_configuration_specifics_proto_enumTypes[5].Descriptor()
}

func (WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) Type() protoreflect.EnumType {
	return &file_wifi_configuration_specifics_proto_enumTypes[5]
}

func (x WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption(num)
	return nil
}

// Deprecated: Use WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption.Descriptor instead.
func (WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption) EnumDescriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 0, 0}
}

type WifiConfigurationSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SSID encoded to hex, letters should be upper case and 0x prefix should be
	// omitted. For example, ssid "network" would be provided as "6E6574776F726B".
	HexSsid      []byte                                   `protobuf:"bytes,1,opt,name=hex_ssid,json=hexSsid" json:"hex_ssid,omitempty"`
	SecurityType *WifiConfigurationSpecifics_SecurityType `protobuf:"varint,2,opt,name=security_type,json=securityType,enum=sync_pb.WifiConfigurationSpecifics_SecurityType" json:"security_type,omitempty"`
	// The passphrase can be ASCII, UTF-8, or a string of hex digits.
	Passphrase           []byte                                                 `protobuf:"bytes,3,opt,name=passphrase" json:"passphrase,omitempty"`
	AutomaticallyConnect *WifiConfigurationSpecifics_AutomaticallyConnectOption `protobuf:"varint,4,opt,name=automatically_connect,json=automaticallyConnect,enum=sync_pb.WifiConfigurationSpecifics_AutomaticallyConnectOption" json:"automatically_connect,omitempty"`
	IsPreferred          *WifiConfigurationSpecifics_IsPreferredOption          `protobuf:"varint,5,opt,name=is_preferred,json=isPreferred,enum=sync_pb.WifiConfigurationSpecifics_IsPreferredOption" json:"is_preferred,omitempty"`
	Metered              *WifiConfigurationSpecifics_MeteredOption              `protobuf:"varint,6,opt,name=metered,enum=sync_pb.WifiConfigurationSpecifics_MeteredOption" json:"metered,omitempty"`
	ProxyConfiguration   *WifiConfigurationSpecifics_ProxyConfiguration         `protobuf:"bytes,7,opt,name=proxy_configuration,json=proxyConfiguration" json:"proxy_configuration,omitempty"`
	DnsOption            *WifiConfigurationSpecifics_DnsOption                  `protobuf:"varint,10,opt,name=dns_option,json=dnsOption,enum=sync_pb.WifiConfigurationSpecifics_DnsOption" json:"dns_option,omitempty"`
	// List of DNS servers to be used when set to DNS_OPTION_CUSTOM.  Up to 4.
	CustomDns []string `protobuf:"bytes,8,rep,name=custom_dns,json=customDns" json:"custom_dns,omitempty"`
	// The last time this configuration was connected to before being synced.  It
	// will only be updated when the configuration is changed. This is represented
	// with the UNIX timestamp, ms since epoch.
	LastConnectedTimestamp *int64 `protobuf:"varint,9,opt,name=last_connected_timestamp,json=lastConnectedTimestamp" json:"last_connected_timestamp,omitempty"`
}

func (x *WifiConfigurationSpecifics) Reset() {
	*x = WifiConfigurationSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_configuration_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConfigurationSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConfigurationSpecifics) ProtoMessage() {}

func (x *WifiConfigurationSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_configuration_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConfigurationSpecifics.ProtoReflect.Descriptor instead.
func (*WifiConfigurationSpecifics) Descriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0}
}

func (x *WifiConfigurationSpecifics) GetHexSsid() []byte {
	if x != nil {
		return x.HexSsid
	}
	return nil
}

func (x *WifiConfigurationSpecifics) GetSecurityType() WifiConfigurationSpecifics_SecurityType {
	if x != nil && x.SecurityType != nil {
		return *x.SecurityType
	}
	return WifiConfigurationSpecifics_SECURITY_TYPE_UNSPECIFIED
}

func (x *WifiConfigurationSpecifics) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *WifiConfigurationSpecifics) GetAutomaticallyConnect() WifiConfigurationSpecifics_AutomaticallyConnectOption {
	if x != nil && x.AutomaticallyConnect != nil {
		return *x.AutomaticallyConnect
	}
	return WifiConfigurationSpecifics_AUTOMATICALLY_CONNECT_UNSPECIFIED
}

func (x *WifiConfigurationSpecifics) GetIsPreferred() WifiConfigurationSpecifics_IsPreferredOption {
	if x != nil && x.IsPreferred != nil {
		return *x.IsPreferred
	}
	return WifiConfigurationSpecifics_IS_PREFERRED_UNSPECIFIED
}

func (x *WifiConfigurationSpecifics) GetMetered() WifiConfigurationSpecifics_MeteredOption {
	if x != nil && x.Metered != nil {
		return *x.Metered
	}
	return WifiConfigurationSpecifics_METERED_OPTION_UNSPECIFIED
}

func (x *WifiConfigurationSpecifics) GetProxyConfiguration() *WifiConfigurationSpecifics_ProxyConfiguration {
	if x != nil {
		return x.ProxyConfiguration
	}
	return nil
}

func (x *WifiConfigurationSpecifics) GetDnsOption() WifiConfigurationSpecifics_DnsOption {
	if x != nil && x.DnsOption != nil {
		return *x.DnsOption
	}
	return WifiConfigurationSpecifics_DNS_OPTION_UNSPECIFIED
}

func (x *WifiConfigurationSpecifics) GetCustomDns() []string {
	if x != nil {
		return x.CustomDns
	}
	return nil
}

func (x *WifiConfigurationSpecifics) GetLastConnectedTimestamp() int64 {
	if x != nil && x.LastConnectedTimestamp != nil {
		return *x.LastConnectedTimestamp
	}
	return 0
}

type WifiConfigurationSpecifics_ProxyConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyOption *WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption `protobuf:"varint,1,opt,name=proxy_option,json=proxyOption,enum=sync_pb.WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption" json:"proxy_option,omitempty"`
	// Only set if PROXY_OPTION_AUTOMATIC.
	AutoconfigurationUrl *string `protobuf:"bytes,2,opt,name=autoconfiguration_url,json=autoconfigurationUrl" json:"autoconfiguration_url,omitempty"`
	// Only set if PROXY_OPTION_MANUAL.
	ManualProxyConfiguration *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration `protobuf:"bytes,3,opt,name=manual_proxy_configuration,json=manualProxyConfiguration" json:"manual_proxy_configuration,omitempty"`
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration) Reset() {
	*x = WifiConfigurationSpecifics_ProxyConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_configuration_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConfigurationSpecifics_ProxyConfiguration) ProtoMessage() {}

func (x *WifiConfigurationSpecifics_ProxyConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_configuration_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConfigurationSpecifics_ProxyConfiguration.ProtoReflect.Descriptor instead.
func (*WifiConfigurationSpecifics_ProxyConfiguration) Descriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 0}
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration) GetProxyOption() WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption {
	if x != nil && x.ProxyOption != nil {
		return *x.ProxyOption
	}
	return WifiConfigurationSpecifics_ProxyConfiguration_PROXY_OPTION_UNSPECIFIED
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration) GetAutoconfigurationUrl() string {
	if x != nil && x.AutoconfigurationUrl != nil {
		return *x.AutoconfigurationUrl
	}
	return ""
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration) GetManualProxyConfiguration() *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration {
	if x != nil {
		return x.ManualProxyConfiguration
	}
	return nil
}

type WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpProxyUrl        *string  `protobuf:"bytes,1,opt,name=http_proxy_url,json=httpProxyUrl" json:"http_proxy_url,omitempty"`
	HttpProxyPort       *int32   `protobuf:"varint,2,opt,name=http_proxy_port,json=httpProxyPort" json:"http_proxy_port,omitempty"`
	SecureHttpProxyUrl  *string  `protobuf:"bytes,3,opt,name=secure_http_proxy_url,json=secureHttpProxyUrl" json:"secure_http_proxy_url,omitempty"`
	SecureHttpProxyPort *int32   `protobuf:"varint,4,opt,name=secure_http_proxy_port,json=secureHttpProxyPort" json:"secure_http_proxy_port,omitempty"`
	SocksHostUrl        *string  `protobuf:"bytes,5,opt,name=socks_host_url,json=socksHostUrl" json:"socks_host_url,omitempty"`
	SocksHostPort       *int32   `protobuf:"varint,6,opt,name=socks_host_port,json=socksHostPort" json:"socks_host_port,omitempty"`
	ExcludedDomains     []string `protobuf:"bytes,7,rep,name=excluded_domains,json=excludedDomains" json:"excluded_domains,omitempty"`
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) Reset() {
	*x = WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wifi_configuration_specifics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) ProtoMessage() {}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_configuration_specifics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration.ProtoReflect.Descriptor instead.
func (*WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) Descriptor() ([]byte, []int) {
	return file_wifi_configuration_specifics_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetHttpProxyUrl() string {
	if x != nil && x.HttpProxyUrl != nil {
		return *x.HttpProxyUrl
	}
	return ""
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetHttpProxyPort() int32 {
	if x != nil && x.HttpProxyPort != nil {
		return *x.HttpProxyPort
	}
	return 0
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetSecureHttpProxyUrl() string {
	if x != nil && x.SecureHttpProxyUrl != nil {
		return *x.SecureHttpProxyUrl
	}
	return ""
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetSecureHttpProxyPort() int32 {
	if x != nil && x.SecureHttpProxyPort != nil {
		return *x.SecureHttpProxyPort
	}
	return 0
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetSocksHostUrl() string {
	if x != nil && x.SocksHostUrl != nil {
		return *x.SocksHostUrl
	}
	return ""
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetSocksHostPort() int32 {
	if x != nil && x.SocksHostPort != nil {
		return *x.SocksHostPort
	}
	return 0
}

func (x *WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration) GetExcludedDomains() []string {
	if x != nil {
		return x.ExcludedDomains
	}
	return nil
}

var File_wifi_configuration_specifics_proto protoreflect.FileDescriptor

var file_wifi_configuration_specifics_proto_rawDesc = []byte{
	0x0a, 0x22, 0x77, 0x69, 0x66, 0x69, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x22, 0xc7, 0x10,
	0x0a, 0x1a, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x65, 0x78, 0x5f, 0x73, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x68, 0x65, 0x78, 0x53, 0x73, 0x69, 0x64, 0x12, 0x55, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x73, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x73,
	0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x61,
	0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x12, 0x58, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x49,
	0x73, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x69, 0x73, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12, 0x4b, 0x0a,
	0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x13, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x12, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0a, 0x64, 0x6e, 0x73, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x6e, 0x73,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x6e, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x6e, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6e, 0x73,
	0x12, 0x38, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0xaa, 0x06, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x65, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x8d, 0x01,
	0x0a, 0x1a, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x57, 0x69, 0x66,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x61, 0x6e, 0x75, 0x61,
	0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x18, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc9, 0x02,
	0x0a, 0x18, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x74,
	0x74, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c,
	0x12, 0x26, 0x0a, 0x0f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x50,
	0x72, 0x6f, 0x78, 0x79, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x48,
	0x74, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x65, 0x5f, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x48, 0x74, 0x74, 0x70, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x48,
	0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x6f, 0x63, 0x6b, 0x73, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f,
	0x58, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x58, 0x59,
	0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x10, 0x02, 0x12, 0x1e,
	0x0a, 0x1a, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41,
	0x55, 0x54, 0x4f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d,
	0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x04, 0x22, 0x73, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x45, 0x43, 0x55, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x57, 0x45, 0x50, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x53, 0x4b, 0x10, 0x03, 0x22, 0x8a, 0x01, 0x0a,
	0x1a, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x6c, 0x79, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x21, 0x41,
	0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x41,
	0x4c, 0x4c, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x55, 0x54, 0x4f, 0x4d, 0x41,
	0x54, 0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f,
	0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x66, 0x0a, 0x11, 0x49, 0x73, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x18, 0x49, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15,
	0x49, 0x53, 0x5f, 0x50, 0x52, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x44, 0x49, 0x53,
	0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x53, 0x5f, 0x50, 0x52,
	0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10,
	0x02, 0x22, 0x77, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x65, 0x72, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x4d, 0x45, 0x54,
	0x45, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x59, 0x45, 0x53, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x4f, 0x50, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x55, 0x54, 0x4f, 0x10, 0x03, 0x22, 0x5b, 0x0a, 0x09, 0x44, 0x6e,
	0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x4e, 0x53, 0x5f, 0x4f,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x4e, 0x53, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x44, 0x48, 0x43, 0x50, 0x10, 0x01,
	0x12, 0x15, 0x0a, 0x11, 0x44, 0x4e, 0x53, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43,
	0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x42, 0x36, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x2e, 0x63,
	0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x48, 0x03, 0x50, 0x01, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
}

var (
	file_wifi_configuration_specifics_proto_rawDescOnce sync.Once
	file_wifi_configuration_specifics_proto_rawDescData = file_wifi_configuration_specifics_proto_rawDesc
)

func file_wifi_configuration_specifics_proto_rawDescGZIP() []byte {
	file_wifi_configuration_specifics_proto_rawDescOnce.Do(func() {
		file_wifi_configuration_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_wifi_configuration_specifics_proto_rawDescData)
	})
	return file_wifi_configuration_specifics_proto_rawDescData
}

var file_wifi_configuration_specifics_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_wifi_configuration_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wifi_configuration_specifics_proto_goTypes = []interface{}{
	(WifiConfigurationSpecifics_SecurityType)(0),                                   // 0: sync_pb.WifiConfigurationSpecifics.SecurityType
	(WifiConfigurationSpecifics_AutomaticallyConnectOption)(0),                     // 1: sync_pb.WifiConfigurationSpecifics.AutomaticallyConnectOption
	(WifiConfigurationSpecifics_IsPreferredOption)(0),                              // 2: sync_pb.WifiConfigurationSpecifics.IsPreferredOption
	(WifiConfigurationSpecifics_MeteredOption)(0),                                  // 3: sync_pb.WifiConfigurationSpecifics.MeteredOption
	(WifiConfigurationSpecifics_DnsOption)(0),                                      // 4: sync_pb.WifiConfigurationSpecifics.DnsOption
	(WifiConfigurationSpecifics_ProxyConfiguration_ProxyOption)(0),                 // 5: sync_pb.WifiConfigurationSpecifics.ProxyConfiguration.ProxyOption
	(*WifiConfigurationSpecifics)(nil),                                             // 6: sync_pb.WifiConfigurationSpecifics
	(*WifiConfigurationSpecifics_ProxyConfiguration)(nil),                          // 7: sync_pb.WifiConfigurationSpecifics.ProxyConfiguration
	(*WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration)(nil), // 8: sync_pb.WifiConfigurationSpecifics.ProxyConfiguration.ManualProxyConfiguration
}
var file_wifi_configuration_specifics_proto_depIdxs = []int32{
	0, // 0: sync_pb.WifiConfigurationSpecifics.security_type:type_name -> sync_pb.WifiConfigurationSpecifics.SecurityType
	1, // 1: sync_pb.WifiConfigurationSpecifics.automatically_connect:type_name -> sync_pb.WifiConfigurationSpecifics.AutomaticallyConnectOption
	2, // 2: sync_pb.WifiConfigurationSpecifics.is_preferred:type_name -> sync_pb.WifiConfigurationSpecifics.IsPreferredOption
	3, // 3: sync_pb.WifiConfigurationSpecifics.metered:type_name -> sync_pb.WifiConfigurationSpecifics.MeteredOption
	7, // 4: sync_pb.WifiConfigurationSpecifics.proxy_configuration:type_name -> sync_pb.WifiConfigurationSpecifics.ProxyConfiguration
	4, // 5: sync_pb.WifiConfigurationSpecifics.dns_option:type_name -> sync_pb.WifiConfigurationSpecifics.DnsOption
	5, // 6: sync_pb.WifiConfigurationSpecifics.ProxyConfiguration.proxy_option:type_name -> sync_pb.WifiConfigurationSpecifics.ProxyConfiguration.ProxyOption
	8, // 7: sync_pb.WifiConfigurationSpecifics.ProxyConfiguration.manual_proxy_configuration:type_name -> sync_pb.WifiConfigurationSpecifics.ProxyConfiguration.ManualProxyConfiguration
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_wifi_configuration_specifics_proto_init() }
func file_wifi_configuration_specifics_proto_init() {
	if File_wifi_configuration_specifics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_wifi_configuration_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConfigurationSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_configuration_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConfigurationSpecifics_ProxyConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wifi_configuration_specifics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConfigurationSpecifics_ProxyConfiguration_ManualProxyConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wifi_configuration_specifics_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wifi_configuration_specifics_proto_goTypes,
		DependencyIndexes: file_wifi_configuration_specifics_proto_depIdxs,
		EnumInfos:         file_wifi_configuration_specifics_proto_enumTypes,
		MessageInfos:      file_wifi_configuration_specifics_proto_msgTypes,
	}.Build()
	File_wifi_configuration_specifics_proto = out.File
	file_wifi_configuration_specifics_proto_rawDesc = nil
	file_wifi_configuration_specifics_proto_goTypes = nil
	file_wifi_configuration_specifics_proto_depIdxs = nil
}
