// Copyright 2019 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: local_trusted_vault.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LocalTrustedVaultKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The actual key.
	KeyMaterial []byte `protobuf:"bytes,1,opt,name=key_material,json=keyMaterial" json:"key_material,omitempty"`
}

func (x *LocalTrustedVaultKey) Reset() {
	*x = LocalTrustedVaultKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_trusted_vault_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalTrustedVaultKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalTrustedVaultKey) ProtoMessage() {}

func (x *LocalTrustedVaultKey) ProtoReflect() protoreflect.Message {
	mi := &file_local_trusted_vault_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalTrustedVaultKey.ProtoReflect.Descriptor instead.
func (*LocalTrustedVaultKey) Descriptor() ([]byte, []int) {
	return file_local_trusted_vault_proto_rawDescGZIP(), []int{0}
}

func (x *LocalTrustedVaultKey) GetKeyMaterial() []byte {
	if x != nil {
		return x.KeyMaterial
	}
	return nil
}

type LocalDeviceRegistrationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Private SecureBox key.
	PrivateKeyMaterial []byte `protobuf:"bytes,1,opt,name=private_key_material,json=privateKeyMaterial" json:"private_key_material,omitempty"`
	// Indicates whether device is registered, i.e. whether its public key is
	// successfully submitted to the server.
	DeviceRegistered *bool `protobuf:"varint,2,opt,name=device_registered,json=deviceRegistered" json:"device_registered,omitempty"`
}

func (x *LocalDeviceRegistrationInfo) Reset() {
	*x = LocalDeviceRegistrationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_trusted_vault_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalDeviceRegistrationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalDeviceRegistrationInfo) ProtoMessage() {}

func (x *LocalDeviceRegistrationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_local_trusted_vault_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalDeviceRegistrationInfo.ProtoReflect.Descriptor instead.
func (*LocalDeviceRegistrationInfo) Descriptor() ([]byte, []int) {
	return file_local_trusted_vault_proto_rawDescGZIP(), []int{1}
}

func (x *LocalDeviceRegistrationInfo) GetPrivateKeyMaterial() []byte {
	if x != nil {
		return x.PrivateKeyMaterial
	}
	return nil
}

func (x *LocalDeviceRegistrationInfo) GetDeviceRegistered() bool {
	if x != nil && x.DeviceRegistered != nil {
		return *x.DeviceRegistered
	}
	return false
}

type LocalTrustedVaultPerUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User identifier.
	GaiaId []byte `protobuf:"bytes,1,opt,name=gaia_id,json=gaiaId" json:"gaia_id,omitempty"`
	// All keys known for a user.
	VaultKey []*LocalTrustedVaultKey `protobuf:"bytes,2,rep,name=vault_key,json=vaultKey" json:"vault_key,omitempty"`
	// The version corresponding to the last element in |vault_key|.
	LastVaultKeyVersion *int32 `protobuf:"varint,3,opt,name=last_vault_key_version,json=lastVaultKeyVersion" json:"last_vault_key_version,omitempty"`
	// Indicates whether |vault_key| is stale, i.e. that the latest locally
	// available key isn't the latest key in the vault. New keys need to be
	// fetched through key retrieval procedure or by following key rotation.
	KeysAreStale *bool `protobuf:"varint,4,opt,name=keys_are_stale,json=keysAreStale" json:"keys_are_stale,omitempty"`
	// Device key and corresponding registration metadata.
	LocalDeviceRegistrationInfo *LocalDeviceRegistrationInfo `protobuf:"bytes,5,opt,name=local_device_registration_info,json=localDeviceRegistrationInfo" json:"local_device_registration_info,omitempty"`
}

func (x *LocalTrustedVaultPerUser) Reset() {
	*x = LocalTrustedVaultPerUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_trusted_vault_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalTrustedVaultPerUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalTrustedVaultPerUser) ProtoMessage() {}

func (x *LocalTrustedVaultPerUser) ProtoReflect() protoreflect.Message {
	mi := &file_local_trusted_vault_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalTrustedVaultPerUser.ProtoReflect.Descriptor instead.
func (*LocalTrustedVaultPerUser) Descriptor() ([]byte, []int) {
	return file_local_trusted_vault_proto_rawDescGZIP(), []int{2}
}

func (x *LocalTrustedVaultPerUser) GetGaiaId() []byte {
	if x != nil {
		return x.GaiaId
	}
	return nil
}

func (x *LocalTrustedVaultPerUser) GetVaultKey() []*LocalTrustedVaultKey {
	if x != nil {
		return x.VaultKey
	}
	return nil
}

func (x *LocalTrustedVaultPerUser) GetLastVaultKeyVersion() int32 {
	if x != nil && x.LastVaultKeyVersion != nil {
		return *x.LastVaultKeyVersion
	}
	return 0
}

func (x *LocalTrustedVaultPerUser) GetKeysAreStale() bool {
	if x != nil && x.KeysAreStale != nil {
		return *x.KeysAreStale
	}
	return false
}

func (x *LocalTrustedVaultPerUser) GetLocalDeviceRegistrationInfo() *LocalDeviceRegistrationInfo {
	if x != nil {
		return x.LocalDeviceRegistrationInfo
	}
	return nil
}

type LocalTrustedVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User []*LocalTrustedVaultPerUser `protobuf:"bytes,1,rep,name=user" json:"user,omitempty"`
}

func (x *LocalTrustedVault) Reset() {
	*x = LocalTrustedVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_local_trusted_vault_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalTrustedVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalTrustedVault) ProtoMessage() {}

func (x *LocalTrustedVault) ProtoReflect() protoreflect.Message {
	mi := &file_local_trusted_vault_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalTrustedVault.ProtoReflect.Descriptor instead.
func (*LocalTrustedVault) Descriptor() ([]byte, []int) {
	return file_local_trusted_vault_proto_rawDescGZIP(), []int{3}
}

func (x *LocalTrustedVault) GetUser() []*LocalTrustedVaultPerUser {
	if x != nil {
		return x.User
	}
	return nil
}

var File_local_trusted_vault_proto protoreflect.FileDescriptor

var file_local_trusted_vault_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f,
	0x76, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x70, 0x62, 0x22, 0x39, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72, 0x75,
	0x73, 0x74, 0x65, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c,
	0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22,
	0x7c, 0x0a, 0x1b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30,
	0x0a, 0x14, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6d, 0x61,
	0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x22, 0xb5, 0x02,
	0x0a, 0x18, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x69, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x67, 0x61, 0x69,
	0x61, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x33, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x6c, 0x61, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x4b, 0x65, 0x79, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x5f, 0x61, 0x72, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6b, 0x65,
	0x79, 0x73, 0x41, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6c, 0x65, 0x12, 0x69, 0x0a, 0x1e, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x1b, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x65, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x54, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x56,
	0x61, 0x75, 0x6c, 0x74, 0x50, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x42, 0x0b, 0x0a, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x48, 0x03,
}

var (
	file_local_trusted_vault_proto_rawDescOnce sync.Once
	file_local_trusted_vault_proto_rawDescData = file_local_trusted_vault_proto_rawDesc
)

func file_local_trusted_vault_proto_rawDescGZIP() []byte {
	file_local_trusted_vault_proto_rawDescOnce.Do(func() {
		file_local_trusted_vault_proto_rawDescData = protoimpl.X.CompressGZIP(file_local_trusted_vault_proto_rawDescData)
	})
	return file_local_trusted_vault_proto_rawDescData
}

var file_local_trusted_vault_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_local_trusted_vault_proto_goTypes = []interface{}{
	(*LocalTrustedVaultKey)(nil),        // 0: sync_pb.LocalTrustedVaultKey
	(*LocalDeviceRegistrationInfo)(nil), // 1: sync_pb.LocalDeviceRegistrationInfo
	(*LocalTrustedVaultPerUser)(nil),    // 2: sync_pb.LocalTrustedVaultPerUser
	(*LocalTrustedVault)(nil),           // 3: sync_pb.LocalTrustedVault
}
var file_local_trusted_vault_proto_depIdxs = []int32{
	0, // 0: sync_pb.LocalTrustedVaultPerUser.vault_key:type_name -> sync_pb.LocalTrustedVaultKey
	1, // 1: sync_pb.LocalTrustedVaultPerUser.local_device_registration_info:type_name -> sync_pb.LocalDeviceRegistrationInfo
	2, // 2: sync_pb.LocalTrustedVault.user:type_name -> sync_pb.LocalTrustedVaultPerUser
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_local_trusted_vault_proto_init() }
func file_local_trusted_vault_proto_init() {
	if File_local_trusted_vault_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_local_trusted_vault_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalTrustedVaultKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_local_trusted_vault_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalDeviceRegistrationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_local_trusted_vault_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalTrustedVaultPerUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_local_trusted_vault_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalTrustedVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_local_trusted_vault_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_local_trusted_vault_proto_goTypes,
		DependencyIndexes: file_local_trusted_vault_proto_depIdxs,
		MessageInfos:      file_local_trusted_vault_proto_msgTypes,
	}.Build()
	File_local_trusted_vault_proto = out.File
	file_local_trusted_vault_proto_rawDesc = nil
	file_local_trusted_vault_proto_goTypes = nil
	file_local_trusted_vault_proto_depIdxs = nil
}
