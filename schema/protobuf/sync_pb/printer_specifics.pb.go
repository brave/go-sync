// Copyright 2016 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Sync protocol datatype extension for printer data.

// If you change or add any fields in this file, update proto_visitors.h and
// potentially proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: printer_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// User PPD configuration
type PrinterPPDReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Url for user provided file.  Overrides other fields.
	UserSuppliedPpdUrl *string `protobuf:"bytes,1,opt,name=user_supplied_ppd_url,json=userSuppliedPpdUrl" json:"user_supplied_ppd_url,omitempty"`
	// Retired fields
	//
	// Deprecated: Marked as deprecated in printer_specifics.proto.
	EffectiveManufacturer *string `protobuf:"bytes,2,opt,name=effective_manufacturer,json=effectiveManufacturer" json:"effective_manufacturer,omitempty"`
	// Deprecated: Marked as deprecated in printer_specifics.proto.
	EffectiveModel *string `protobuf:"bytes,3,opt,name=effective_model,json=effectiveModel" json:"effective_model,omitempty"`
	// String identifying the type of printer, used to look up a ppd to drive the
	// printer.
	EffectiveMakeAndModel *string `protobuf:"bytes,4,opt,name=effective_make_and_model,json=effectiveMakeAndModel" json:"effective_make_and_model,omitempty"`
	// True if the printer should be automatically configured, false otherwise.
	Autoconf *bool `protobuf:"varint,5,opt,name=autoconf,def=0" json:"autoconf,omitempty"`
}

// Default values for PrinterPPDReference fields.
const (
	Default_PrinterPPDReference_Autoconf = bool(false)
)

func (x *PrinterPPDReference) Reset() {
	*x = PrinterPPDReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_printer_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrinterPPDReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrinterPPDReference) ProtoMessage() {}

func (x *PrinterPPDReference) ProtoReflect() protoreflect.Message {
	mi := &file_printer_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrinterPPDReference.ProtoReflect.Descriptor instead.
func (*PrinterPPDReference) Descriptor() ([]byte, []int) {
	return file_printer_specifics_proto_rawDescGZIP(), []int{0}
}

func (x *PrinterPPDReference) GetUserSuppliedPpdUrl() string {
	if x != nil && x.UserSuppliedPpdUrl != nil {
		return *x.UserSuppliedPpdUrl
	}
	return ""
}

// Deprecated: Marked as deprecated in printer_specifics.proto.
func (x *PrinterPPDReference) GetEffectiveManufacturer() string {
	if x != nil && x.EffectiveManufacturer != nil {
		return *x.EffectiveManufacturer
	}
	return ""
}

// Deprecated: Marked as deprecated in printer_specifics.proto.
func (x *PrinterPPDReference) GetEffectiveModel() string {
	if x != nil && x.EffectiveModel != nil {
		return *x.EffectiveModel
	}
	return ""
}

func (x *PrinterPPDReference) GetEffectiveMakeAndModel() string {
	if x != nil && x.EffectiveMakeAndModel != nil {
		return *x.EffectiveMakeAndModel
	}
	return ""
}

func (x *PrinterPPDReference) GetAutoconf() bool {
	if x != nil && x.Autoconf != nil {
		return *x.Autoconf
	}
	return Default_PrinterPPDReference_Autoconf
}

type PrinterSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Printer record GUID
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// User visible name.  Any string.
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// User visible description.  Any string.
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Printer manufacturer.  Should be a known manufacturuer.
	// Deprecated in favor of make_and_model.
	//
	// Deprecated: Marked as deprecated in printer_specifics.proto.
	Manufacturer *string `protobuf:"bytes,4,opt,name=manufacturer" json:"manufacturer,omitempty"`
	// Printer model.  Should match a known model for the manufacturer.
	// Deprecated in favor of make_and_model.
	//
	// Deprecated: Marked as deprecated in printer_specifics.proto.
	Model *string `protobuf:"bytes,5,opt,name=model" json:"model,omitempty"`
	// Universal Resource Identifier for the printer on the network.  usb:// will
	// be the scheme for USB printers.  Example
	// ipp://address.example:port/queue/queue/queue.
	Uri *string `protobuf:"bytes,6,opt,name=uri" json:"uri,omitempty"`
	// Universally Unique Identifier provided by the printer.  Used for unique
	// identification of printers in a zeroconf environment.
	Uuid *string `protobuf:"bytes,7,opt,name=uuid" json:"uuid,omitempty"`
	// PPDData was deprecated in favor of PPDReference format.
	//
	// Deprecated: Marked as deprecated in printer_specifics.proto.
	Ppd []byte `protobuf:"bytes,8,opt,name=ppd" json:"ppd,omitempty"`
	// Structure representing the user's ppd configuration.
	PpdReference *PrinterPPDReference `protobuf:"bytes,9,opt,name=ppd_reference,json=ppdReference" json:"ppd_reference,omitempty"`
	// Timestamp when printer was last updated.
	UpdatedTimestamp *int64 `protobuf:"varint,10,opt,name=updated_timestamp,json=updatedTimestamp" json:"updated_timestamp,omitempty"`
	// The make and model of the printer in one string.  The typical arrangement
	// for this is '<make> <model>'.  This aligns with the typical formatting of
	// the IPP attribute printer-make-and-model.
	MakeAndModel *string `protobuf:"bytes,11,opt,name=make_and_model,json=makeAndModel" json:"make_and_model,omitempty"`
	// Universal Resource Identifier for the print server on the network.  This
	// will only be populated if the printer is from a print server.  Example
	// ipp://address.example:port/
	PrintServerUri *string `protobuf:"bytes,12,opt,name=print_server_uri,json=printServerUri" json:"print_server_uri,omitempty"`
}

func (x *PrinterSpecifics) Reset() {
	*x = PrinterSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_printer_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrinterSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrinterSpecifics) ProtoMessage() {}

func (x *PrinterSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_printer_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrinterSpecifics.ProtoReflect.Descriptor instead.
func (*PrinterSpecifics) Descriptor() ([]byte, []int) {
	return file_printer_specifics_proto_rawDescGZIP(), []int{1}
}

func (x *PrinterSpecifics) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PrinterSpecifics) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *PrinterSpecifics) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

// Deprecated: Marked as deprecated in printer_specifics.proto.
func (x *PrinterSpecifics) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

// Deprecated: Marked as deprecated in printer_specifics.proto.
func (x *PrinterSpecifics) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *PrinterSpecifics) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *PrinterSpecifics) GetUuid() string {
	if x != nil && x.Uuid != nil {
		return *x.Uuid
	}
	return ""
}

// Deprecated: Marked as deprecated in printer_specifics.proto.
func (x *PrinterSpecifics) GetPpd() []byte {
	if x != nil {
		return x.Ppd
	}
	return nil
}

func (x *PrinterSpecifics) GetPpdReference() *PrinterPPDReference {
	if x != nil {
		return x.PpdReference
	}
	return nil
}

func (x *PrinterSpecifics) GetUpdatedTimestamp() int64 {
	if x != nil && x.UpdatedTimestamp != nil {
		return *x.UpdatedTimestamp
	}
	return 0
}

func (x *PrinterSpecifics) GetMakeAndModel() string {
	if x != nil && x.MakeAndModel != nil {
		return *x.MakeAndModel
	}
	return ""
}

func (x *PrinterSpecifics) GetPrintServerUri() string {
	if x != nil && x.PrintServerUri != nil {
		return *x.PrintServerUri
	}
	return ""
}

var File_printer_specifics_proto protoreflect.FileDescriptor

var file_printer_specifics_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x62, 0x22, 0x8c, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x50, 0x50,
	0x44, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x70, 0x64, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x70, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a,
	0x16, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x75, 0x66,
	0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x15, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x61, 0x6e, 0x75,
	0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x0f, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21,
	0x0a, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x63, 0x6f, 0x6e,
	0x66, 0x22, 0xa5, 0x03, 0x0a, 0x10, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0c, 0x6d,
	0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x03, 0x70, 0x70, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x03, 0x70, 0x70, 0x64, 0x12, 0x41, 0x0a, 0x0d, 0x70, 0x70, 0x64,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x50, 0x50, 0x44, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c,
	0x70, 0x70, 0x64, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x6b,
	0x65, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6b, 0x65, 0x41, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x69, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x55, 0x72, 0x69, 0x42, 0x36, 0x0a, 0x25, 0x6f, 0x72, 0x67,
	0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x48, 0x03, 0x50, 0x01, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x62,
}

var (
	file_printer_specifics_proto_rawDescOnce sync.Once
	file_printer_specifics_proto_rawDescData = file_printer_specifics_proto_rawDesc
)

func file_printer_specifics_proto_rawDescGZIP() []byte {
	file_printer_specifics_proto_rawDescOnce.Do(func() {
		file_printer_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_printer_specifics_proto_rawDescData)
	})
	return file_printer_specifics_proto_rawDescData
}

var file_printer_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_printer_specifics_proto_goTypes = []interface{}{
	(*PrinterPPDReference)(nil), // 0: sync_pb.PrinterPPDReference
	(*PrinterSpecifics)(nil),    // 1: sync_pb.PrinterSpecifics
}
var file_printer_specifics_proto_depIdxs = []int32{
	0, // 0: sync_pb.PrinterSpecifics.ppd_reference:type_name -> sync_pb.PrinterPPDReference
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_printer_specifics_proto_init() }
func file_printer_specifics_proto_init() {
	if File_printer_specifics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_printer_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrinterPPDReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_printer_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrinterSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_printer_specifics_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_printer_specifics_proto_goTypes,
		DependencyIndexes: file_printer_specifics_proto_depIdxs,
		MessageInfos:      file_printer_specifics_proto_msgTypes,
	}.Build()
	File_printer_specifics_proto = out.File
	file_printer_specifics_proto_rawDesc = nil
	file_printer_specifics_proto_goTypes = nil
	file_printer_specifics_proto_depIdxs = nil
}
