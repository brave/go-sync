// Copyright 2012 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Sync protocol datatype extension for apps.

// If you change or add any fields in this file, update proto_visitors.h and
// potentially proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: app_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The possible launch types for an app.
// This enum should be kept in sync with extensions::LaunchType.
type AppSpecifics_LaunchType int32

const (
	AppSpecifics_PINNED     AppSpecifics_LaunchType = 0
	AppSpecifics_REGULAR    AppSpecifics_LaunchType = 1
	AppSpecifics_FULLSCREEN AppSpecifics_LaunchType = 2
	AppSpecifics_WINDOW     AppSpecifics_LaunchType = 3
)

// Enum value maps for AppSpecifics_LaunchType.
var (
	AppSpecifics_LaunchType_name = map[int32]string{
		0: "PINNED",
		1: "REGULAR",
		2: "FULLSCREEN",
		3: "WINDOW",
	}
	AppSpecifics_LaunchType_value = map[string]int32{
		"PINNED":     0,
		"REGULAR":    1,
		"FULLSCREEN": 2,
		"WINDOW":     3,
	}
)

func (x AppSpecifics_LaunchType) Enum() *AppSpecifics_LaunchType {
	p := new(AppSpecifics_LaunchType)
	*p = x
	return p
}

func (x AppSpecifics_LaunchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppSpecifics_LaunchType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_specifics_proto_enumTypes[0].Descriptor()
}

func (AppSpecifics_LaunchType) Type() protoreflect.EnumType {
	return &file_app_specifics_proto_enumTypes[0]
}

func (x AppSpecifics_LaunchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppSpecifics_LaunchType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppSpecifics_LaunchType(num)
	return nil
}

// Deprecated: Use AppSpecifics_LaunchType.Descriptor instead.
func (AppSpecifics_LaunchType) EnumDescriptor() ([]byte, []int) {
	return file_app_specifics_proto_rawDescGZIP(), []int{2, 0}
}

// Settings related to push notifications for apps.
type AppNotificationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DEPRECATED: Use oauth_client_id below.
	// Whether or not the user has setup notifications at least once.
	// The value for this field will start out false and will be set
	// to true when the user accepts receiving notifications for the
	// first time and then it will always remain true.
	//
	// Deprecated: Marked as deprecated in app_specifics.proto.
	InitialSetupDone *bool `protobuf:"varint,1,opt,name=initial_setup_done,json=initialSetupDone" json:"initial_setup_done,omitempty"`
	// Whether or not the user has disabled notifications.
	Disabled *bool `protobuf:"varint,2,opt,name=disabled" json:"disabled,omitempty"`
	// OAuth2 client id to which the user granted the notification permission.
	// This field will start out empty.
	// It will be set when the user accepts receiving notifications.
	// This field is used when the user revokes the notifications permission.
	// Note that it is never cleared after it was set once. Hence, the presence
	// of this field can be used to determine if the user has setup notifications
	// at least once for the given app.
	OauthClientId *string `protobuf:"bytes,3,opt,name=oauth_client_id,json=oauthClientId" json:"oauth_client_id,omitempty"`
}

func (x *AppNotificationSettings) Reset() {
	*x = AppNotificationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppNotificationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppNotificationSettings) ProtoMessage() {}

func (x *AppNotificationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_app_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppNotificationSettings.ProtoReflect.Descriptor instead.
func (*AppNotificationSettings) Descriptor() ([]byte, []int) {
	return file_app_specifics_proto_rawDescGZIP(), []int{0}
}

// Deprecated: Marked as deprecated in app_specifics.proto.
func (x *AppNotificationSettings) GetInitialSetupDone() bool {
	if x != nil && x.InitialSetupDone != nil {
		return *x.InitialSetupDone
	}
	return false
}

func (x *AppNotificationSettings) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

func (x *AppNotificationSettings) GetOauthClientId() string {
	if x != nil && x.OauthClientId != nil {
		return *x.OauthClientId
	}
	return ""
}

// Information about a linked app icon.
type LinkedAppIconInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The URL of the app icon.
	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	// The size of the app icon in DIPs.
	Size *uint32 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
}

func (x *LinkedAppIconInfo) Reset() {
	*x = LinkedAppIconInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedAppIconInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedAppIconInfo) ProtoMessage() {}

func (x *LinkedAppIconInfo) ProtoReflect() protoreflect.Message {
	mi := &file_app_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedAppIconInfo.ProtoReflect.Descriptor instead.
func (*LinkedAppIconInfo) Descriptor() ([]byte, []int) {
	return file_app_specifics_proto_rawDescGZIP(), []int{1}
}

func (x *LinkedAppIconInfo) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *LinkedAppIconInfo) GetSize() uint32 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

// Properties of app sync objects.
//
// For now, an app is just an extension.  We keep the two data types
// separate for future-proofing purposes.
type AppSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Extension data.
	Extension *ExtensionSpecifics `protobuf:"bytes,1,opt,name=extension" json:"extension,omitempty"`
	// Notification settings.
	NotificationSettings *AppNotificationSettings `protobuf:"bytes,2,opt,name=notification_settings,json=notificationSettings" json:"notification_settings,omitempty"`
	// This controls where on a page this application icon will appear.
	AppLaunchOrdinal *string `protobuf:"bytes,3,opt,name=app_launch_ordinal,json=appLaunchOrdinal" json:"app_launch_ordinal,omitempty"`
	// This specifics which page the application icon will appear on in the NTP.
	// This values only provide the order within the application pages, not within
	// all of the panels in the NTP.
	PageOrdinal *string `protobuf:"bytes,4,opt,name=page_ordinal,json=pageOrdinal" json:"page_ordinal,omitempty"`
	// This describes how the extension should be launched.
	LaunchType *AppSpecifics_LaunchType `protobuf:"varint,5,opt,name=launch_type,json=launchType,enum=sync_pb.AppSpecifics_LaunchType" json:"launch_type,omitempty"`
	// DEPRECATED. See https://crbug.com/1233303.
	//
	// Deprecated: Marked as deprecated in app_specifics.proto.
	BookmarkAppUrl *string `protobuf:"bytes,6,opt,name=bookmark_app_url,json=bookmarkAppUrl" json:"bookmark_app_url,omitempty"`
	// DEPRECATED. See https://crbug.com/1233303.
	//
	// Deprecated: Marked as deprecated in app_specifics.proto.
	BookmarkAppDescription *string `protobuf:"bytes,7,opt,name=bookmark_app_description,json=bookmarkAppDescription" json:"bookmark_app_description,omitempty"`
	// DEPRECATED. See https://crbug.com/1233303.
	//
	// Deprecated: Marked as deprecated in app_specifics.proto.
	BookmarkAppIconColor *string `protobuf:"bytes,8,opt,name=bookmark_app_icon_color,json=bookmarkAppIconColor" json:"bookmark_app_icon_color,omitempty"`
	// This is information about linked icons (that is, icons that are downloaded
	// from outside the app's bundle of files.
	LinkedAppIcons []*LinkedAppIconInfo `protobuf:"bytes,9,rep,name=linked_app_icons,json=linkedAppIcons" json:"linked_app_icons,omitempty"`
	// DEPRECATED. See https://crbug.com/1233303.
	//
	// Deprecated: Marked as deprecated in app_specifics.proto.
	BookmarkAppScope *string `protobuf:"bytes,10,opt,name=bookmark_app_scope,json=bookmarkAppScope" json:"bookmark_app_scope,omitempty"`
	// DEPRECATED. See https://crbug.com/1233303.
	//
	// Deprecated: Marked as deprecated in app_specifics.proto.
	BookmarkAppThemeColor *uint32 `protobuf:"varint,11,opt,name=bookmark_app_theme_color,json=bookmarkAppThemeColor" json:"bookmark_app_theme_color,omitempty"`
}

func (x *AppSpecifics) Reset() {
	*x = AppSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_specifics_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppSpecifics) ProtoMessage() {}

func (x *AppSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_app_specifics_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppSpecifics.ProtoReflect.Descriptor instead.
func (*AppSpecifics) Descriptor() ([]byte, []int) {
	return file_app_specifics_proto_rawDescGZIP(), []int{2}
}

func (x *AppSpecifics) GetExtension() *ExtensionSpecifics {
	if x != nil {
		return x.Extension
	}
	return nil
}

func (x *AppSpecifics) GetNotificationSettings() *AppNotificationSettings {
	if x != nil {
		return x.NotificationSettings
	}
	return nil
}

func (x *AppSpecifics) GetAppLaunchOrdinal() string {
	if x != nil && x.AppLaunchOrdinal != nil {
		return *x.AppLaunchOrdinal
	}
	return ""
}

func (x *AppSpecifics) GetPageOrdinal() string {
	if x != nil && x.PageOrdinal != nil {
		return *x.PageOrdinal
	}
	return ""
}

func (x *AppSpecifics) GetLaunchType() AppSpecifics_LaunchType {
	if x != nil && x.LaunchType != nil {
		return *x.LaunchType
	}
	return AppSpecifics_PINNED
}

// Deprecated: Marked as deprecated in app_specifics.proto.
func (x *AppSpecifics) GetBookmarkAppUrl() string {
	if x != nil && x.BookmarkAppUrl != nil {
		return *x.BookmarkAppUrl
	}
	return ""
}

// Deprecated: Marked as deprecated in app_specifics.proto.
func (x *AppSpecifics) GetBookmarkAppDescription() string {
	if x != nil && x.BookmarkAppDescription != nil {
		return *x.BookmarkAppDescription
	}
	return ""
}

// Deprecated: Marked as deprecated in app_specifics.proto.
func (x *AppSpecifics) GetBookmarkAppIconColor() string {
	if x != nil && x.BookmarkAppIconColor != nil {
		return *x.BookmarkAppIconColor
	}
	return ""
}

func (x *AppSpecifics) GetLinkedAppIcons() []*LinkedAppIconInfo {
	if x != nil {
		return x.LinkedAppIcons
	}
	return nil
}

// Deprecated: Marked as deprecated in app_specifics.proto.
func (x *AppSpecifics) GetBookmarkAppScope() string {
	if x != nil && x.BookmarkAppScope != nil {
		return *x.BookmarkAppScope
	}
	return ""
}

// Deprecated: Marked as deprecated in app_specifics.proto.
func (x *AppSpecifics) GetBookmarkAppThemeColor() uint32 {
	if x != nil && x.BookmarkAppThemeColor != nil {
		return *x.BookmarkAppThemeColor
	}
	return 0
}

var File_app_specifics_proto protoreflect.FileDescriptor

var file_app_specifics_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x1a, 0x19,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x17, 0x41, 0x70,
	0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x61,
	0x75, 0x74, 0x68, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x11, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xd3, 0x05, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x70, 0x62, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x52, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x70, 0x70,
	0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x70, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x41, 0x0a, 0x0b, 0x6c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x20, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x10, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0e, 0x62, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x18, 0x62,
	0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x16, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x17, 0x62, 0x6f, 0x6f,
	0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x14,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x10, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41,
	0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x6c, 0x69, 0x6e, 0x6b,
	0x65, 0x64, 0x41, 0x70, 0x70, 0x49, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x12, 0x62, 0x6f,
	0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x6b,
	0x6d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x18,
	0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x15, 0x62, 0x6f, 0x6f, 0x6b, 0x6d, 0x61, 0x72, 0x6b, 0x41, 0x70, 0x70, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x0a, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x49, 0x4e, 0x4e, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c, 0x41, 0x52, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x55, 0x4c, 0x4c, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x03, 0x42, 0x36, 0x0a, 0x25,
	0x6f, 0x72, 0x67, 0x2e, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x03, 0x50, 0x01, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x70, 0x62,
}

var (
	file_app_specifics_proto_rawDescOnce sync.Once
	file_app_specifics_proto_rawDescData = file_app_specifics_proto_rawDesc
)

func file_app_specifics_proto_rawDescGZIP() []byte {
	file_app_specifics_proto_rawDescOnce.Do(func() {
		file_app_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_specifics_proto_rawDescData)
	})
	return file_app_specifics_proto_rawDescData
}

var file_app_specifics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_app_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_app_specifics_proto_goTypes = []interface{}{
	(AppSpecifics_LaunchType)(0),    // 0: sync_pb.AppSpecifics.LaunchType
	(*AppNotificationSettings)(nil), // 1: sync_pb.AppNotificationSettings
	(*LinkedAppIconInfo)(nil),       // 2: sync_pb.LinkedAppIconInfo
	(*AppSpecifics)(nil),            // 3: sync_pb.AppSpecifics
	(*ExtensionSpecifics)(nil),      // 4: sync_pb.ExtensionSpecifics
}
var file_app_specifics_proto_depIdxs = []int32{
	4, // 0: sync_pb.AppSpecifics.extension:type_name -> sync_pb.ExtensionSpecifics
	1, // 1: sync_pb.AppSpecifics.notification_settings:type_name -> sync_pb.AppNotificationSettings
	0, // 2: sync_pb.AppSpecifics.launch_type:type_name -> sync_pb.AppSpecifics.LaunchType
	2, // 3: sync_pb.AppSpecifics.linked_app_icons:type_name -> sync_pb.LinkedAppIconInfo
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_app_specifics_proto_init() }
func file_app_specifics_proto_init() {
	if File_app_specifics_proto != nil {
		return
	}
	file_extension_specifics_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_app_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppNotificationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedAppIconInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_specifics_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_specifics_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_specifics_proto_goTypes,
		DependencyIndexes: file_app_specifics_proto_depIdxs,
		EnumInfos:         file_app_specifics_proto_enumTypes,
		MessageInfos:      file_app_specifics_proto_msgTypes,
	}.Build()
	File_app_specifics_proto = out.File
	file_app_specifics_proto_rawDesc = nil
	file_app_specifics_proto_goTypes = nil
	file_app_specifics_proto_depIdxs = nil
}
