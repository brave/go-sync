// Copyright 2013 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Sync protocol datatype extension for the app list (aka app launcher).

// If you change or add any fields in this file, update proto_visitors.h and
// potentially proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: app_list_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// What type of item this is.
type AppListSpecifics_AppListItemType int32

const (
	// An app, whether a web app, Android app, etc.
	//
	// For bookmark apps (URL shortcuts), additional information such as their
	// URLs are kept in the AppSpecifics.bookmark_app_foobar fields.
	AppListSpecifics_TYPE_APP AppListSpecifics_AppListItemType = 1
	// A request to remove any matching default installed apps.
	AppListSpecifics_TYPE_REMOVE_DEFAULT_APP AppListSpecifics_AppListItemType = 2
	// A folder containing entries whose |parent_id| matches |item_id|.
	AppListSpecifics_TYPE_FOLDER AppListSpecifics_AppListItemType = 3
	// Obsolete type, intended for URL shortcuts, that was never implemented.
	AppListSpecifics_TYPE_OBSOLETE_URL AppListSpecifics_AppListItemType = 4
	// A "page break" item (Indicate creation of a new page in app list).
	AppListSpecifics_TYPE_PAGE_BREAK AppListSpecifics_AppListItemType = 5
)

// Enum value maps for AppListSpecifics_AppListItemType.
var (
	AppListSpecifics_AppListItemType_name = map[int32]string{
		1: "TYPE_APP",
		2: "TYPE_REMOVE_DEFAULT_APP",
		3: "TYPE_FOLDER",
		4: "TYPE_OBSOLETE_URL",
		5: "TYPE_PAGE_BREAK",
	}
	AppListSpecifics_AppListItemType_value = map[string]int32{
		"TYPE_APP":                1,
		"TYPE_REMOVE_DEFAULT_APP": 2,
		"TYPE_FOLDER":             3,
		"TYPE_OBSOLETE_URL":       4,
		"TYPE_PAGE_BREAK":         5,
	}
)

func (x AppListSpecifics_AppListItemType) Enum() *AppListSpecifics_AppListItemType {
	p := new(AppListSpecifics_AppListItemType)
	*p = x
	return p
}

func (x AppListSpecifics_AppListItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppListSpecifics_AppListItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_app_list_specifics_proto_enumTypes[0].Descriptor()
}

func (AppListSpecifics_AppListItemType) Type() protoreflect.EnumType {
	return &file_app_list_specifics_proto_enumTypes[0]
}

func (x AppListSpecifics_AppListItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppListSpecifics_AppListItemType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppListSpecifics_AppListItemType(num)
	return nil
}

// Deprecated: Use AppListSpecifics_AppListItemType.Descriptor instead.
func (AppListSpecifics_AppListItemType) EnumDescriptor() ([]byte, []int) {
	return file_app_list_specifics_proto_rawDescGZIP(), []int{0, 0}
}

// The color groups used for grouping together icons by colors.
type AppListSpecifics_ColorGroup int32

const (
	AppListSpecifics_COLOR_EMPTY   AppListSpecifics_ColorGroup = 0
	AppListSpecifics_COLOR_WHITE   AppListSpecifics_ColorGroup = 1
	AppListSpecifics_COLOR_RED     AppListSpecifics_ColorGroup = 2
	AppListSpecifics_COLOR_ORANGE  AppListSpecifics_ColorGroup = 3
	AppListSpecifics_COLOR_YELLOW  AppListSpecifics_ColorGroup = 4
	AppListSpecifics_COLOR_GREEN   AppListSpecifics_ColorGroup = 5
	AppListSpecifics_COLOR_BLUE    AppListSpecifics_ColorGroup = 6
	AppListSpecifics_COLOR_MAGENTA AppListSpecifics_ColorGroup = 7
	AppListSpecifics_COLOR_BLACK   AppListSpecifics_ColorGroup = 8
)

// Enum value maps for AppListSpecifics_ColorGroup.
var (
	AppListSpecifics_ColorGroup_name = map[int32]string{
		0: "COLOR_EMPTY",
		1: "COLOR_WHITE",
		2: "COLOR_RED",
		3: "COLOR_ORANGE",
		4: "COLOR_YELLOW",
		5: "COLOR_GREEN",
		6: "COLOR_BLUE",
		7: "COLOR_MAGENTA",
		8: "COLOR_BLACK",
	}
	AppListSpecifics_ColorGroup_value = map[string]int32{
		"COLOR_EMPTY":   0,
		"COLOR_WHITE":   1,
		"COLOR_RED":     2,
		"COLOR_ORANGE":  3,
		"COLOR_YELLOW":  4,
		"COLOR_GREEN":   5,
		"COLOR_BLUE":    6,
		"COLOR_MAGENTA": 7,
		"COLOR_BLACK":   8,
	}
)

func (x AppListSpecifics_ColorGroup) Enum() *AppListSpecifics_ColorGroup {
	p := new(AppListSpecifics_ColorGroup)
	*p = x
	return p
}

func (x AppListSpecifics_ColorGroup) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppListSpecifics_ColorGroup) Descriptor() protoreflect.EnumDescriptor {
	return file_app_list_specifics_proto_enumTypes[1].Descriptor()
}

func (AppListSpecifics_ColorGroup) Type() protoreflect.EnumType {
	return &file_app_list_specifics_proto_enumTypes[1]
}

func (x AppListSpecifics_ColorGroup) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AppListSpecifics_ColorGroup) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AppListSpecifics_ColorGroup(num)
	return nil
}

// Deprecated: Use AppListSpecifics_ColorGroup.Descriptor instead.
func (AppListSpecifics_ColorGroup) EnumDescriptor() ([]byte, []int) {
	return file_app_list_specifics_proto_rawDescGZIP(), []int{0, 1}
}

// Properties of app list objects.
type AppListSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier for the item:
	// * TYPE_FOLDER: Folder id (generated)
	// * TYPE_APP: App Id
	ItemId   *string                           `protobuf:"bytes,1,opt,name=item_id,json=itemId" json:"item_id,omitempty"`
	ItemType *AppListSpecifics_AppListItemType `protobuf:"varint,2,opt,name=item_type,json=itemType,enum=sync_pb.AppListSpecifics_AppListItemType" json:"item_type,omitempty"`
	// Item name (FOLDER).
	ItemName *string `protobuf:"bytes,3,opt,name=item_name,json=itemName" json:"item_name,omitempty"`
	// Id of the parent (folder) item.
	ParentId *string `protobuf:"bytes,4,opt,name=parent_id,json=parentId" json:"parent_id,omitempty"`
	// Marked OBSOLETE because this is unused for the app list.
	// Which page this item will appear on in the app list.
	//
	// Deprecated: Marked as deprecated in app_list_specifics.proto.
	OBSOLETEPageOrdinal *string `protobuf:"bytes,5,opt,name=OBSOLETE_page_ordinal,json=OBSOLETEPageOrdinal" json:"OBSOLETE_page_ordinal,omitempty"`
	// Where on a page this item will appear.
	ItemOrdinal *string `protobuf:"bytes,6,opt,name=item_ordinal,json=itemOrdinal" json:"item_ordinal,omitempty"`
	// Where on a shelf this item will appear.
	// Note that not all apps are pinned to the shelf by the user -- some might
	// originate from the PinnedLauncherApps policy. See `is_user_pinned` for more
	// details.
	ItemPinOrdinal *string                     `protobuf:"bytes,7,opt,name=item_pin_ordinal,json=itemPinOrdinal" json:"item_pin_ordinal,omitempty"`
	ItemColor      *AppListSpecifics_IconColor `protobuf:"bytes,8,opt,name=item_color,json=itemColor" json:"item_color,omitempty"`
	// Whether the app was pinned to shelf by the user or not (apps can also be
	// pinned by other means such as enterprise policies).
	// The eventual consistency (a sufficient amount of time after the rollout)
	// promise here is for this field to be synced with the pin ordinal:
	// `item_pin_ordinal.IsValid() <=> is_user_pinned.has_value()`.
	// However, it's okay for this contract to be violated in the meantine.
	//
	//  * missing value indicates that either `item_pin_ordinal` is invalid or
	//    this field is new and hasn't yet been processed by sync.
	//  * `true` means that the app was pinned by the user.
	//    This definition is used in a relaxed way -- for instance, default
	//    OS apps that are shown in the shelf (like Chrome itself) also have this
	//    value set to true.
	//  * `false` means that the app was pinned by PinnedLauncherApps policy.
	//    Note that user pin has priority: if an app was first pinned by the user
	//    and then additionally specified in PinnedLauncherApps, this value will
	//    be set to true.
	IsUserPinned *bool `protobuf:"varint,9,opt,name=is_user_pinned,json=isUserPinned" json:"is_user_pinned,omitempty"`
	// Identifier for the app package of the item. Package Ids are stable and
	// globally unique across app platforms, whereas App Id stored in item_id is
	// not.
	PromisePackageId *string `protobuf:"bytes,10,opt,name=promise_package_id,json=promisePackageId" json:"promise_package_id,omitempty"`
}

func (x *AppListSpecifics) Reset() {
	*x = AppListSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_list_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSpecifics) ProtoMessage() {}

func (x *AppListSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_app_list_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSpecifics.ProtoReflect.Descriptor instead.
func (*AppListSpecifics) Descriptor() ([]byte, []int) {
	return file_app_list_specifics_proto_rawDescGZIP(), []int{0}
}

func (x *AppListSpecifics) GetItemId() string {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return ""
}

func (x *AppListSpecifics) GetItemType() AppListSpecifics_AppListItemType {
	if x != nil && x.ItemType != nil {
		return *x.ItemType
	}
	return AppListSpecifics_TYPE_APP
}

func (x *AppListSpecifics) GetItemName() string {
	if x != nil && x.ItemName != nil {
		return *x.ItemName
	}
	return ""
}

func (x *AppListSpecifics) GetParentId() string {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return ""
}

// Deprecated: Marked as deprecated in app_list_specifics.proto.
func (x *AppListSpecifics) GetOBSOLETEPageOrdinal() string {
	if x != nil && x.OBSOLETEPageOrdinal != nil {
		return *x.OBSOLETEPageOrdinal
	}
	return ""
}

func (x *AppListSpecifics) GetItemOrdinal() string {
	if x != nil && x.ItemOrdinal != nil {
		return *x.ItemOrdinal
	}
	return ""
}

func (x *AppListSpecifics) GetItemPinOrdinal() string {
	if x != nil && x.ItemPinOrdinal != nil {
		return *x.ItemPinOrdinal
	}
	return ""
}

func (x *AppListSpecifics) GetItemColor() *AppListSpecifics_IconColor {
	if x != nil {
		return x.ItemColor
	}
	return nil
}

func (x *AppListSpecifics) GetIsUserPinned() bool {
	if x != nil && x.IsUserPinned != nil {
		return *x.IsUserPinned
	}
	return false
}

func (x *AppListSpecifics) GetPromisePackageId() string {
	if x != nil && x.PromisePackageId != nil {
		return *x.PromisePackageId
	}
	return ""
}

type AppListSpecifics_IconColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The item icon's background color.
	BackgroundColor *AppListSpecifics_ColorGroup `protobuf:"varint,1,opt,name=background_color,json=backgroundColor,enum=sync_pb.AppListSpecifics_ColorGroup" json:"background_color,omitempty"`
	// The item icon's hue.
	Hue *int32 `protobuf:"varint,2,opt,name=hue" json:"hue,omitempty"`
}

func (x *AppListSpecifics_IconColor) Reset() {
	*x = AppListSpecifics_IconColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_list_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppListSpecifics_IconColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppListSpecifics_IconColor) ProtoMessage() {}

func (x *AppListSpecifics_IconColor) ProtoReflect() protoreflect.Message {
	mi := &file_app_list_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppListSpecifics_IconColor.ProtoReflect.Descriptor instead.
func (*AppListSpecifics_IconColor) Descriptor() ([]byte, []int) {
	return file_app_list_specifics_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AppListSpecifics_IconColor) GetBackgroundColor() AppListSpecifics_ColorGroup {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return AppListSpecifics_COLOR_EMPTY
}

func (x *AppListSpecifics_IconColor) GetHue() int32 {
	if x != nil && x.Hue != nil {
		return *x.Hue
	}
	return 0
}

var File_app_list_specifics_proto protoreflect.FileDescriptor

var file_app_list_specifics_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x70, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x70, 0x62, 0x22, 0xde, 0x06, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x46, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41,
	0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x69, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x15, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x13, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45,
	0x50, 0x61, 0x67, 0x65, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x70, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x50, 0x69,
	0x6e, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x42, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x1a, 0x6e, 0x0a, 0x09, 0x49, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x4f, 0x0a,
	0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70,
	0x62, 0x2e, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x68, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x68, 0x75, 0x65,
	0x22, 0x79, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45,
	0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f, 0x4c, 0x44, 0x45, 0x52, 0x10, 0x03, 0x12,
	0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x42, 0x53, 0x4f, 0x4c, 0x45, 0x54, 0x45,
	0x5f, 0x55, 0x52, 0x4c, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x41, 0x47, 0x45, 0x5f, 0x42, 0x52, 0x45, 0x41, 0x4b, 0x10, 0x05, 0x22, 0xa6, 0x01, 0x0a, 0x0a,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f,
	0x4c, 0x4f, 0x52, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x57, 0x48, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x04, 0x12,
	0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x05,
	0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x06,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x4d, 0x41, 0x47, 0x45, 0x4e, 0x54,
	0x41, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x5f, 0x42, 0x4c, 0x41,
	0x43, 0x4b, 0x10, 0x08, 0x42, 0x36, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x68, 0x72, 0x6f,
	0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x03, 0x50,
	0x01, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
}

var (
	file_app_list_specifics_proto_rawDescOnce sync.Once
	file_app_list_specifics_proto_rawDescData = file_app_list_specifics_proto_rawDesc
)

func file_app_list_specifics_proto_rawDescGZIP() []byte {
	file_app_list_specifics_proto_rawDescOnce.Do(func() {
		file_app_list_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_list_specifics_proto_rawDescData)
	})
	return file_app_list_specifics_proto_rawDescData
}

var file_app_list_specifics_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_app_list_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_app_list_specifics_proto_goTypes = []interface{}{
	(AppListSpecifics_AppListItemType)(0), // 0: sync_pb.AppListSpecifics.AppListItemType
	(AppListSpecifics_ColorGroup)(0),      // 1: sync_pb.AppListSpecifics.ColorGroup
	(*AppListSpecifics)(nil),              // 2: sync_pb.AppListSpecifics
	(*AppListSpecifics_IconColor)(nil),    // 3: sync_pb.AppListSpecifics.IconColor
}
var file_app_list_specifics_proto_depIdxs = []int32{
	0, // 0: sync_pb.AppListSpecifics.item_type:type_name -> sync_pb.AppListSpecifics.AppListItemType
	3, // 1: sync_pb.AppListSpecifics.item_color:type_name -> sync_pb.AppListSpecifics.IconColor
	1, // 2: sync_pb.AppListSpecifics.IconColor.background_color:type_name -> sync_pb.AppListSpecifics.ColorGroup
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_app_list_specifics_proto_init() }
func file_app_list_specifics_proto_init() {
	if File_app_list_specifics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_list_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppListSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_list_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppListSpecifics_IconColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_list_specifics_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_app_list_specifics_proto_goTypes,
		DependencyIndexes: file_app_list_specifics_proto_depIdxs,
		EnumInfos:         file_app_list_specifics_proto_enumTypes,
		MessageInfos:      file_app_list_specifics_proto_msgTypes,
	}.Build()
	File_app_list_specifics_proto = out.File
	file_app_list_specifics_proto_rawDesc = nil
	file_app_list_specifics_proto_goTypes = nil
	file_app_list_specifics_proto_depIdxs = nil
}
