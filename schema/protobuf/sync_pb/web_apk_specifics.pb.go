// Copyright 2023 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// If you change or add any fields in this file, update
// components/sync/protocol/proto_visitors.h and potentially
// components/sync/protocol/proto_enum_conversions.{h, cc}.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.6.1
// source: web_apk_specifics.proto

package sync_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WebApkIconInfo_Purpose int32

const (
	WebApkIconInfo_UNSPECIFIED WebApkIconInfo_Purpose = 0
	// Suitable for any purpose.
	WebApkIconInfo_ANY WebApkIconInfo_Purpose = 1
	// Designed for masking.
	WebApkIconInfo_MASKABLE WebApkIconInfo_Purpose = 2
	// Suitable for monochrome purposes.
	WebApkIconInfo_MONOCHROME WebApkIconInfo_Purpose = 3
)

// Enum value maps for WebApkIconInfo_Purpose.
var (
	WebApkIconInfo_Purpose_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "ANY",
		2: "MASKABLE",
		3: "MONOCHROME",
	}
	WebApkIconInfo_Purpose_value = map[string]int32{
		"UNSPECIFIED": 0,
		"ANY":         1,
		"MASKABLE":    2,
		"MONOCHROME":  3,
	}
)

func (x WebApkIconInfo_Purpose) Enum() *WebApkIconInfo_Purpose {
	p := new(WebApkIconInfo_Purpose)
	*p = x
	return p
}

func (x WebApkIconInfo_Purpose) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebApkIconInfo_Purpose) Descriptor() protoreflect.EnumDescriptor {
	return file_web_apk_specifics_proto_enumTypes[0].Descriptor()
}

func (WebApkIconInfo_Purpose) Type() protoreflect.EnumType {
	return &file_web_apk_specifics_proto_enumTypes[0]
}

func (x WebApkIconInfo_Purpose) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *WebApkIconInfo_Purpose) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = WebApkIconInfo_Purpose(num)
	return nil
}

// Deprecated: Use WebApkIconInfo_Purpose.Descriptor instead.
func (WebApkIconInfo_Purpose) EnumDescriptor() ([]byte, []int) {
	return file_web_apk_specifics_proto_rawDescGZIP(), []int{0, 0}
}

// Sync & local data: Information about web app icon.
type WebApkIconInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The size of the square app icon, in raw pixels.
	SizeInPx *int32 `protobuf:"varint,1,opt,name=size_in_px,json=sizeInPx" json:"size_in_px,omitempty"`
	// The URL of the app icon.
	Url *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	// The purpose or context in which the icon should be used.
	Purpose *WebApkIconInfo_Purpose `protobuf:"varint,3,opt,name=purpose,enum=sync_pb.WebApkIconInfo_Purpose" json:"purpose,omitempty"`
}

func (x *WebApkIconInfo) Reset() {
	*x = WebApkIconInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_apk_specifics_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebApkIconInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebApkIconInfo) ProtoMessage() {}

func (x *WebApkIconInfo) ProtoReflect() protoreflect.Message {
	mi := &file_web_apk_specifics_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebApkIconInfo.ProtoReflect.Descriptor instead.
func (*WebApkIconInfo) Descriptor() ([]byte, []int) {
	return file_web_apk_specifics_proto_rawDescGZIP(), []int{0}
}

func (x *WebApkIconInfo) GetSizeInPx() int32 {
	if x != nil && x.SizeInPx != nil {
		return *x.SizeInPx
	}
	return 0
}

func (x *WebApkIconInfo) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *WebApkIconInfo) GetPurpose() WebApkIconInfo_Purpose {
	if x != nil && x.Purpose != nil {
		return *x.Purpose
	}
	return WebApkIconInfo_UNSPECIFIED
}

// WebApk data.
type WebApkSpecifics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManifestId *string           `protobuf:"bytes,1,opt,name=manifest_id,json=manifestId" json:"manifest_id,omitempty"`
	StartUrl   *string           `protobuf:"bytes,2,opt,name=start_url,json=startUrl" json:"start_url,omitempty"`
	Name       *string           `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	ThemeColor *uint32           `protobuf:"varint,4,opt,name=theme_color,json=themeColor" json:"theme_color,omitempty"`
	Scope      *string           `protobuf:"bytes,5,opt,name=scope" json:"scope,omitempty"`
	IconInfos  []*WebApkIconInfo `protobuf:"bytes,6,rep,name=icon_infos,json=iconInfos" json:"icon_infos,omitempty"`
	// Time when this WebApk was last used or installed.
	// Number of microseconds since 1601, aka Windows epoch.
	LastUsedTimeWindowsEpochMicros *int64 `protobuf:"varint,7,opt,name=last_used_time_windows_epoch_micros,json=lastUsedTimeWindowsEpochMicros" json:"last_used_time_windows_epoch_micros,omitempty"`
}

func (x *WebApkSpecifics) Reset() {
	*x = WebApkSpecifics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_web_apk_specifics_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebApkSpecifics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebApkSpecifics) ProtoMessage() {}

func (x *WebApkSpecifics) ProtoReflect() protoreflect.Message {
	mi := &file_web_apk_specifics_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebApkSpecifics.ProtoReflect.Descriptor instead.
func (*WebApkSpecifics) Descriptor() ([]byte, []int) {
	return file_web_apk_specifics_proto_rawDescGZIP(), []int{1}
}

func (x *WebApkSpecifics) GetManifestId() string {
	if x != nil && x.ManifestId != nil {
		return *x.ManifestId
	}
	return ""
}

func (x *WebApkSpecifics) GetStartUrl() string {
	if x != nil && x.StartUrl != nil {
		return *x.StartUrl
	}
	return ""
}

func (x *WebApkSpecifics) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *WebApkSpecifics) GetThemeColor() uint32 {
	if x != nil && x.ThemeColor != nil {
		return *x.ThemeColor
	}
	return 0
}

func (x *WebApkSpecifics) GetScope() string {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return ""
}

func (x *WebApkSpecifics) GetIconInfos() []*WebApkIconInfo {
	if x != nil {
		return x.IconInfos
	}
	return nil
}

func (x *WebApkSpecifics) GetLastUsedTimeWindowsEpochMicros() int64 {
	if x != nil && x.LastUsedTimeWindowsEpochMicros != nil {
		return *x.LastUsedTimeWindowsEpochMicros
	}
	return 0
}

var File_web_apk_specifics_proto protoreflect.FileDescriptor

var file_web_apk_specifics_proto_rawDesc = []byte{
	0x0a, 0x17, 0x77, 0x65, 0x62, 0x5f, 0x61, 0x70, 0x6b, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x79, 0x6e, 0x63, 0x5f,
	0x70, 0x62, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x57, 0x65, 0x62, 0x41, 0x70, 0x6b, 0x49, 0x63, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x69, 0x6e,
	0x5f, 0x70, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x7a, 0x65, 0x49,
	0x6e, 0x50, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
	0x2e, 0x57, 0x65, 0x62, 0x41, 0x70, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x07, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65,
	0x22, 0x41, 0x0a, 0x07, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03,
	0x41, 0x4e, 0x59, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x41, 0x53, 0x4b, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x4f, 0x4e, 0x4f, 0x43, 0x48, 0x52, 0x4f, 0x4d,
	0x45, 0x10, 0x03, 0x22, 0x9f, 0x02, 0x0a, 0x0f, 0x57, 0x65, 0x62, 0x41, 0x70, 0x6b, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x69, 0x66,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61,
	0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x65,
	0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x12, 0x36, 0x0a, 0x0a, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62, 0x2e, 0x57,
	0x65, 0x62, 0x41, 0x70, 0x6b, 0x49, 0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69,
	0x63, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x4b, 0x0a, 0x23, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x73, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x42, 0x36, 0x0a, 0x25, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x68, 0x72,
	0x6f, 0x6d, 0x69, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48, 0x03,
	0x50, 0x01, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x62,
}

var (
	file_web_apk_specifics_proto_rawDescOnce sync.Once
	file_web_apk_specifics_proto_rawDescData = file_web_apk_specifics_proto_rawDesc
)

func file_web_apk_specifics_proto_rawDescGZIP() []byte {
	file_web_apk_specifics_proto_rawDescOnce.Do(func() {
		file_web_apk_specifics_proto_rawDescData = protoimpl.X.CompressGZIP(file_web_apk_specifics_proto_rawDescData)
	})
	return file_web_apk_specifics_proto_rawDescData
}

var file_web_apk_specifics_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_web_apk_specifics_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_web_apk_specifics_proto_goTypes = []interface{}{
	(WebApkIconInfo_Purpose)(0), // 0: sync_pb.WebApkIconInfo.Purpose
	(*WebApkIconInfo)(nil),      // 1: sync_pb.WebApkIconInfo
	(*WebApkSpecifics)(nil),     // 2: sync_pb.WebApkSpecifics
}
var file_web_apk_specifics_proto_depIdxs = []int32{
	0, // 0: sync_pb.WebApkIconInfo.purpose:type_name -> sync_pb.WebApkIconInfo.Purpose
	1, // 1: sync_pb.WebApkSpecifics.icon_infos:type_name -> sync_pb.WebApkIconInfo
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_web_apk_specifics_proto_init() }
func file_web_apk_specifics_proto_init() {
	if File_web_apk_specifics_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_web_apk_specifics_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebApkIconInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_web_apk_specifics_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebApkSpecifics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_web_apk_specifics_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_web_apk_specifics_proto_goTypes,
		DependencyIndexes: file_web_apk_specifics_proto_depIdxs,
		EnumInfos:         file_web_apk_specifics_proto_enumTypes,
		MessageInfos:      file_web_apk_specifics_proto_msgTypes,
	}.Build()
	File_web_apk_specifics_proto = out.File
	file_web_apk_specifics_proto_rawDesc = nil
	file_web_apk_specifics_proto_goTypes = nil
	file_web_apk_specifics_proto_depIdxs = nil
}
